# ==============================================================
# File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
# Version: 2015.4
# Copyright (C) 2015 Xilinx Inc. All rights reserved.
# 
# ==============================================================

package require math::bignum
# source iptypes.tcl
if {[catch {source $env(XILINX_VIVADO)/data/ip/xilinx/xbip_utils_v3_0/common_tcl/iptypes.tcl}]} {
    set SupportDataType 0
} else {
    set SupportDataType 1
}

proc glob-r {{dir .}} {
    # {{{
    set res {}
    foreach i [lsort [glob -nocomplain -dir $dir *]] {
        if {[file type $i]=="directory"} {
            eval lappend  res [glob-r $i]
        } else {
            lappend res $i
        }
    }
    set res
    # }}}
}


## IP Info
set Vendor      "hwdll"
set Library     "hls"
set IPName      "targeted_function"
set Version     "1.0"
set DisplayName "reconfigurable_module"
set Revision    "1601221140"
set Description "Dummy Reconfigurable Module"
set Device      "zynq"
set Taxonomy    "/Hardware_Accelerator"

## Variables
set Top "targeted_function"
set VerilogFiles [glob -nocomplain hdl/verilog/*]
set VhdlFiles [glob -nocomplain hdl/vhdl/*]
set SWDriverFiles [glob-r drivers]
set SubcoreFiles [glob -nocomplain subcore/*]
set DocumentFiles [glob -nocomplain doc/*]
set BDFiles [glob -nocomplain bd/*]
set ConstraintFiles [glob -nocomplain constraints/*]
set MiscFiles [glob -nocomplain misc/*]
set Interfaces {
    s_axi_rm {
        type "axi4lite"
        mode "slave"
        port_prefix "s_axi_rm"
        param_prefix "C_S_AXI_RM"
        addr_bits "12"
        port_width "AWADDR 12 WDATA 32 WSTRB 4 ARADDR 12 RDATA 32"
        registers {{ 0x00 CTRL       RW   0x0 "Control signals"  {  { 0 1 AP_START RW 0 "Control signal Register for 'ap_start'." }  { 1 1 AP_DONE R 0 "Control signal Register for 'ap_done'." }  { 2 1 AP_IDLE R 0 "Control signal Register for 'ap_idle'." }  { 3 1 AP_READY R 0 "Control signal Register for 'ap_ready'." }  { 4 3 RESERVED_1 R 0 "Reserved.  0s on read." }  { 7 1 AUTO_RESTART RW 0 "Control signal Register for 'auto_restart'." }  { 8 24 RESERVED_2 R 0 "Reserved.  0s on read." }  } }  { 0x04 GIER       RW   0x0 "Global Interrupt Enable Register"   {  { 0 1 Enable RW 0 "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled" }  { 1 30 RESERVED R 0 "Reserved.  0s on read." }  } }  { 0x08 IP_IER     RW   0x0 "IP Interrupt Enable Register"   {  { 0 1 CHAN0_INT_EN RW 0 "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled." }  { 1 1 CHAN1_INT_EN RW 0 "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled." }  { 2 30 RESERVED R 0 "Reserved.  0s on read." }  } }  { 0x0c IP_ISR     RW   0x0 "IP Interrupt Status Register"   {  { 0 1 CHAN0_INT_ST RTOW 0 "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup" }  { 1 1 CHAN1_INT_ST RTOW 0 "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup" }  { 2 30 RESERVED R 0 "Reserved.  0s on read." }  } } {0x10 ap_return R 0x0 "Data signal of ap_return" {{0 32 ap_return R 0 "Bit 31 to 0 Data signal of ap_return"}}} {0x18 output_000 R 0x0 "Data signal of output_000" {{0 32 output_000 R 0 "Bit 31 to 0 Data signal of output_000"}}} {0x1c output_000_ctrl R 0x0 "Control signal of output_000" {{0 1 output_000_ap_vld R 0 "Control signal output_000_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x20 output_001 R 0x0 "Data signal of output_001" {{0 32 output_001 R 0 "Bit 31 to 0 Data signal of output_001"}}} {0x24 output_001_ctrl R 0x0 "Control signal of output_001" {{0 1 output_001_ap_vld R 0 "Control signal output_001_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x28 output_002 R 0x0 "Data signal of output_002" {{0 32 output_002 R 0 "Bit 31 to 0 Data signal of output_002"}}} {0x2c output_002_ctrl R 0x0 "Control signal of output_002" {{0 1 output_002_ap_vld R 0 "Control signal output_002_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x30 output_003 R 0x0 "Data signal of output_003" {{0 32 output_003 R 0 "Bit 31 to 0 Data signal of output_003"}}} {0x34 output_003_ctrl R 0x0 "Control signal of output_003" {{0 1 output_003_ap_vld R 0 "Control signal output_003_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x38 output_004 R 0x0 "Data signal of output_004" {{0 32 output_004 R 0 "Bit 31 to 0 Data signal of output_004"}}} {0x3c output_004_ctrl R 0x0 "Control signal of output_004" {{0 1 output_004_ap_vld R 0 "Control signal output_004_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x40 output_005 R 0x0 "Data signal of output_005" {{0 32 output_005 R 0 "Bit 31 to 0 Data signal of output_005"}}} {0x44 output_005_ctrl R 0x0 "Control signal of output_005" {{0 1 output_005_ap_vld R 0 "Control signal output_005_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x48 output_006 R 0x0 "Data signal of output_006" {{0 32 output_006 R 0 "Bit 31 to 0 Data signal of output_006"}}} {0x4c output_006_ctrl R 0x0 "Control signal of output_006" {{0 1 output_006_ap_vld R 0 "Control signal output_006_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x50 output_007 R 0x0 "Data signal of output_007" {{0 32 output_007 R 0 "Bit 31 to 0 Data signal of output_007"}}} {0x54 output_007_ctrl R 0x0 "Control signal of output_007" {{0 1 output_007_ap_vld R 0 "Control signal output_007_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x58 output_008 R 0x0 "Data signal of output_008" {{0 32 output_008 R 0 "Bit 31 to 0 Data signal of output_008"}}} {0x5c output_008_ctrl R 0x0 "Control signal of output_008" {{0 1 output_008_ap_vld R 0 "Control signal output_008_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x60 output_009 R 0x0 "Data signal of output_009" {{0 32 output_009 R 0 "Bit 31 to 0 Data signal of output_009"}}} {0x64 output_009_ctrl R 0x0 "Control signal of output_009" {{0 1 output_009_ap_vld R 0 "Control signal output_009_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x68 output_010 R 0x0 "Data signal of output_010" {{0 32 output_010 R 0 "Bit 31 to 0 Data signal of output_010"}}} {0x6c output_010_ctrl R 0x0 "Control signal of output_010" {{0 1 output_010_ap_vld R 0 "Control signal output_010_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x70 output_011 R 0x0 "Data signal of output_011" {{0 32 output_011 R 0 "Bit 31 to 0 Data signal of output_011"}}} {0x74 output_011_ctrl R 0x0 "Control signal of output_011" {{0 1 output_011_ap_vld R 0 "Control signal output_011_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x78 output_012 R 0x0 "Data signal of output_012" {{0 32 output_012 R 0 "Bit 31 to 0 Data signal of output_012"}}} {0x7c output_012_ctrl R 0x0 "Control signal of output_012" {{0 1 output_012_ap_vld R 0 "Control signal output_012_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x80 output_013 R 0x0 "Data signal of output_013" {{0 32 output_013 R 0 "Bit 31 to 0 Data signal of output_013"}}} {0x84 output_013_ctrl R 0x0 "Control signal of output_013" {{0 1 output_013_ap_vld R 0 "Control signal output_013_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x88 output_014 R 0x0 "Data signal of output_014" {{0 32 output_014 R 0 "Bit 31 to 0 Data signal of output_014"}}} {0x8c output_014_ctrl R 0x0 "Control signal of output_014" {{0 1 output_014_ap_vld R 0 "Control signal output_014_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x90 output_015 R 0x0 "Data signal of output_015" {{0 32 output_015 R 0 "Bit 31 to 0 Data signal of output_015"}}} {0x94 output_015_ctrl R 0x0 "Control signal of output_015" {{0 1 output_015_ap_vld R 0 "Control signal output_015_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x98 output_016 R 0x0 "Data signal of output_016" {{0 32 output_016 R 0 "Bit 31 to 0 Data signal of output_016"}}} {0x9c output_016_ctrl R 0x0 "Control signal of output_016" {{0 1 output_016_ap_vld R 0 "Control signal output_016_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa0 output_017 R 0x0 "Data signal of output_017" {{0 32 output_017 R 0 "Bit 31 to 0 Data signal of output_017"}}} {0xa4 output_017_ctrl R 0x0 "Control signal of output_017" {{0 1 output_017_ap_vld R 0 "Control signal output_017_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa8 output_018 R 0x0 "Data signal of output_018" {{0 32 output_018 R 0 "Bit 31 to 0 Data signal of output_018"}}} {0xac output_018_ctrl R 0x0 "Control signal of output_018" {{0 1 output_018_ap_vld R 0 "Control signal output_018_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb0 output_019 R 0x0 "Data signal of output_019" {{0 32 output_019 R 0 "Bit 31 to 0 Data signal of output_019"}}} {0xb4 output_019_ctrl R 0x0 "Control signal of output_019" {{0 1 output_019_ap_vld R 0 "Control signal output_019_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb8 output_020 R 0x0 "Data signal of output_020" {{0 32 output_020 R 0 "Bit 31 to 0 Data signal of output_020"}}} {0xbc output_020_ctrl R 0x0 "Control signal of output_020" {{0 1 output_020_ap_vld R 0 "Control signal output_020_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xc0 output_021 R 0x0 "Data signal of output_021" {{0 32 output_021 R 0 "Bit 31 to 0 Data signal of output_021"}}} {0xc4 output_021_ctrl R 0x0 "Control signal of output_021" {{0 1 output_021_ap_vld R 0 "Control signal output_021_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xc8 output_022 R 0x0 "Data signal of output_022" {{0 32 output_022 R 0 "Bit 31 to 0 Data signal of output_022"}}} {0xcc output_022_ctrl R 0x0 "Control signal of output_022" {{0 1 output_022_ap_vld R 0 "Control signal output_022_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xd0 output_023 R 0x0 "Data signal of output_023" {{0 32 output_023 R 0 "Bit 31 to 0 Data signal of output_023"}}} {0xd4 output_023_ctrl R 0x0 "Control signal of output_023" {{0 1 output_023_ap_vld R 0 "Control signal output_023_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xd8 output_024 R 0x0 "Data signal of output_024" {{0 32 output_024 R 0 "Bit 31 to 0 Data signal of output_024"}}} {0xdc output_024_ctrl R 0x0 "Control signal of output_024" {{0 1 output_024_ap_vld R 0 "Control signal output_024_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xe0 output_025 R 0x0 "Data signal of output_025" {{0 32 output_025 R 0 "Bit 31 to 0 Data signal of output_025"}}} {0xe4 output_025_ctrl R 0x0 "Control signal of output_025" {{0 1 output_025_ap_vld R 0 "Control signal output_025_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xe8 output_026 R 0x0 "Data signal of output_026" {{0 32 output_026 R 0 "Bit 31 to 0 Data signal of output_026"}}} {0xec output_026_ctrl R 0x0 "Control signal of output_026" {{0 1 output_026_ap_vld R 0 "Control signal output_026_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xf0 output_027 R 0x0 "Data signal of output_027" {{0 32 output_027 R 0 "Bit 31 to 0 Data signal of output_027"}}} {0xf4 output_027_ctrl R 0x0 "Control signal of output_027" {{0 1 output_027_ap_vld R 0 "Control signal output_027_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xf8 output_028 R 0x0 "Data signal of output_028" {{0 32 output_028 R 0 "Bit 31 to 0 Data signal of output_028"}}} {0xfc output_028_ctrl R 0x0 "Control signal of output_028" {{0 1 output_028_ap_vld R 0 "Control signal output_028_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x100 output_029 R 0x0 "Data signal of output_029" {{0 32 output_029 R 0 "Bit 31 to 0 Data signal of output_029"}}} {0x104 output_029_ctrl R 0x0 "Control signal of output_029" {{0 1 output_029_ap_vld R 0 "Control signal output_029_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x108 output_030 R 0x0 "Data signal of output_030" {{0 32 output_030 R 0 "Bit 31 to 0 Data signal of output_030"}}} {0x10c output_030_ctrl R 0x0 "Control signal of output_030" {{0 1 output_030_ap_vld R 0 "Control signal output_030_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x110 output_031 R 0x0 "Data signal of output_031" {{0 32 output_031 R 0 "Bit 31 to 0 Data signal of output_031"}}} {0x114 output_031_ctrl R 0x0 "Control signal of output_031" {{0 1 output_031_ap_vld R 0 "Control signal output_031_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x118 output_032 R 0x0 "Data signal of output_032" {{0 32 output_032 R 0 "Bit 31 to 0 Data signal of output_032"}}} {0x11c output_032_ctrl R 0x0 "Control signal of output_032" {{0 1 output_032_ap_vld R 0 "Control signal output_032_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x120 output_033 R 0x0 "Data signal of output_033" {{0 32 output_033 R 0 "Bit 31 to 0 Data signal of output_033"}}} {0x124 output_033_ctrl R 0x0 "Control signal of output_033" {{0 1 output_033_ap_vld R 0 "Control signal output_033_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x128 output_034 R 0x0 "Data signal of output_034" {{0 32 output_034 R 0 "Bit 31 to 0 Data signal of output_034"}}} {0x12c output_034_ctrl R 0x0 "Control signal of output_034" {{0 1 output_034_ap_vld R 0 "Control signal output_034_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x130 output_035 R 0x0 "Data signal of output_035" {{0 32 output_035 R 0 "Bit 31 to 0 Data signal of output_035"}}} {0x134 output_035_ctrl R 0x0 "Control signal of output_035" {{0 1 output_035_ap_vld R 0 "Control signal output_035_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x138 output_036 R 0x0 "Data signal of output_036" {{0 32 output_036 R 0 "Bit 31 to 0 Data signal of output_036"}}} {0x13c output_036_ctrl R 0x0 "Control signal of output_036" {{0 1 output_036_ap_vld R 0 "Control signal output_036_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x140 output_037 R 0x0 "Data signal of output_037" {{0 32 output_037 R 0 "Bit 31 to 0 Data signal of output_037"}}} {0x144 output_037_ctrl R 0x0 "Control signal of output_037" {{0 1 output_037_ap_vld R 0 "Control signal output_037_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x148 output_038 R 0x0 "Data signal of output_038" {{0 32 output_038 R 0 "Bit 31 to 0 Data signal of output_038"}}} {0x14c output_038_ctrl R 0x0 "Control signal of output_038" {{0 1 output_038_ap_vld R 0 "Control signal output_038_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x150 output_039 R 0x0 "Data signal of output_039" {{0 32 output_039 R 0 "Bit 31 to 0 Data signal of output_039"}}} {0x154 output_039_ctrl R 0x0 "Control signal of output_039" {{0 1 output_039_ap_vld R 0 "Control signal output_039_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x158 output_040 R 0x0 "Data signal of output_040" {{0 32 output_040 R 0 "Bit 31 to 0 Data signal of output_040"}}} {0x15c output_040_ctrl R 0x0 "Control signal of output_040" {{0 1 output_040_ap_vld R 0 "Control signal output_040_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x160 output_041 R 0x0 "Data signal of output_041" {{0 32 output_041 R 0 "Bit 31 to 0 Data signal of output_041"}}} {0x164 output_041_ctrl R 0x0 "Control signal of output_041" {{0 1 output_041_ap_vld R 0 "Control signal output_041_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x168 output_042 R 0x0 "Data signal of output_042" {{0 32 output_042 R 0 "Bit 31 to 0 Data signal of output_042"}}} {0x16c output_042_ctrl R 0x0 "Control signal of output_042" {{0 1 output_042_ap_vld R 0 "Control signal output_042_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x170 output_043 R 0x0 "Data signal of output_043" {{0 32 output_043 R 0 "Bit 31 to 0 Data signal of output_043"}}} {0x174 output_043_ctrl R 0x0 "Control signal of output_043" {{0 1 output_043_ap_vld R 0 "Control signal output_043_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x178 output_044 R 0x0 "Data signal of output_044" {{0 32 output_044 R 0 "Bit 31 to 0 Data signal of output_044"}}} {0x17c output_044_ctrl R 0x0 "Control signal of output_044" {{0 1 output_044_ap_vld R 0 "Control signal output_044_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x180 output_045 R 0x0 "Data signal of output_045" {{0 32 output_045 R 0 "Bit 31 to 0 Data signal of output_045"}}} {0x184 output_045_ctrl R 0x0 "Control signal of output_045" {{0 1 output_045_ap_vld R 0 "Control signal output_045_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x188 output_046 R 0x0 "Data signal of output_046" {{0 32 output_046 R 0 "Bit 31 to 0 Data signal of output_046"}}} {0x18c output_046_ctrl R 0x0 "Control signal of output_046" {{0 1 output_046_ap_vld R 0 "Control signal output_046_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x190 output_047 R 0x0 "Data signal of output_047" {{0 32 output_047 R 0 "Bit 31 to 0 Data signal of output_047"}}} {0x194 output_047_ctrl R 0x0 "Control signal of output_047" {{0 1 output_047_ap_vld R 0 "Control signal output_047_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x198 output_048 R 0x0 "Data signal of output_048" {{0 32 output_048 R 0 "Bit 31 to 0 Data signal of output_048"}}} {0x19c output_048_ctrl R 0x0 "Control signal of output_048" {{0 1 output_048_ap_vld R 0 "Control signal output_048_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1a0 output_049 R 0x0 "Data signal of output_049" {{0 32 output_049 R 0 "Bit 31 to 0 Data signal of output_049"}}} {0x1a4 output_049_ctrl R 0x0 "Control signal of output_049" {{0 1 output_049_ap_vld R 0 "Control signal output_049_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1a8 output_050 R 0x0 "Data signal of output_050" {{0 32 output_050 R 0 "Bit 31 to 0 Data signal of output_050"}}} {0x1ac output_050_ctrl R 0x0 "Control signal of output_050" {{0 1 output_050_ap_vld R 0 "Control signal output_050_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1b0 output_051 R 0x0 "Data signal of output_051" {{0 32 output_051 R 0 "Bit 31 to 0 Data signal of output_051"}}} {0x1b4 output_051_ctrl R 0x0 "Control signal of output_051" {{0 1 output_051_ap_vld R 0 "Control signal output_051_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1b8 output_052 R 0x0 "Data signal of output_052" {{0 32 output_052 R 0 "Bit 31 to 0 Data signal of output_052"}}} {0x1bc output_052_ctrl R 0x0 "Control signal of output_052" {{0 1 output_052_ap_vld R 0 "Control signal output_052_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1c0 output_053 R 0x0 "Data signal of output_053" {{0 32 output_053 R 0 "Bit 31 to 0 Data signal of output_053"}}} {0x1c4 output_053_ctrl R 0x0 "Control signal of output_053" {{0 1 output_053_ap_vld R 0 "Control signal output_053_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1c8 output_054 R 0x0 "Data signal of output_054" {{0 32 output_054 R 0 "Bit 31 to 0 Data signal of output_054"}}} {0x1cc output_054_ctrl R 0x0 "Control signal of output_054" {{0 1 output_054_ap_vld R 0 "Control signal output_054_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1d0 output_055 R 0x0 "Data signal of output_055" {{0 32 output_055 R 0 "Bit 31 to 0 Data signal of output_055"}}} {0x1d4 output_055_ctrl R 0x0 "Control signal of output_055" {{0 1 output_055_ap_vld R 0 "Control signal output_055_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1d8 output_056 R 0x0 "Data signal of output_056" {{0 32 output_056 R 0 "Bit 31 to 0 Data signal of output_056"}}} {0x1dc output_056_ctrl R 0x0 "Control signal of output_056" {{0 1 output_056_ap_vld R 0 "Control signal output_056_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1e0 output_057 R 0x0 "Data signal of output_057" {{0 32 output_057 R 0 "Bit 31 to 0 Data signal of output_057"}}} {0x1e4 output_057_ctrl R 0x0 "Control signal of output_057" {{0 1 output_057_ap_vld R 0 "Control signal output_057_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1e8 output_058 R 0x0 "Data signal of output_058" {{0 32 output_058 R 0 "Bit 31 to 0 Data signal of output_058"}}} {0x1ec output_058_ctrl R 0x0 "Control signal of output_058" {{0 1 output_058_ap_vld R 0 "Control signal output_058_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1f0 output_059 R 0x0 "Data signal of output_059" {{0 32 output_059 R 0 "Bit 31 to 0 Data signal of output_059"}}} {0x1f4 output_059_ctrl R 0x0 "Control signal of output_059" {{0 1 output_059_ap_vld R 0 "Control signal output_059_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x1f8 output_060 R 0x0 "Data signal of output_060" {{0 32 output_060 R 0 "Bit 31 to 0 Data signal of output_060"}}} {0x1fc output_060_ctrl R 0x0 "Control signal of output_060" {{0 1 output_060_ap_vld R 0 "Control signal output_060_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x200 output_061 R 0x0 "Data signal of output_061" {{0 32 output_061 R 0 "Bit 31 to 0 Data signal of output_061"}}} {0x204 output_061_ctrl R 0x0 "Control signal of output_061" {{0 1 output_061_ap_vld R 0 "Control signal output_061_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x208 output_062 R 0x0 "Data signal of output_062" {{0 32 output_062 R 0 "Bit 31 to 0 Data signal of output_062"}}} {0x20c output_062_ctrl R 0x0 "Control signal of output_062" {{0 1 output_062_ap_vld R 0 "Control signal output_062_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x210 output_063 R 0x0 "Data signal of output_063" {{0 32 output_063 R 0 "Bit 31 to 0 Data signal of output_063"}}} {0x214 output_063_ctrl R 0x0 "Control signal of output_063" {{0 1 output_063_ap_vld R 0 "Control signal output_063_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x218 output_064 R 0x0 "Data signal of output_064" {{0 32 output_064 R 0 "Bit 31 to 0 Data signal of output_064"}}} {0x21c output_064_ctrl R 0x0 "Control signal of output_064" {{0 1 output_064_ap_vld R 0 "Control signal output_064_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x220 output_065 R 0x0 "Data signal of output_065" {{0 32 output_065 R 0 "Bit 31 to 0 Data signal of output_065"}}} {0x224 output_065_ctrl R 0x0 "Control signal of output_065" {{0 1 output_065_ap_vld R 0 "Control signal output_065_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x228 output_066 R 0x0 "Data signal of output_066" {{0 32 output_066 R 0 "Bit 31 to 0 Data signal of output_066"}}} {0x22c output_066_ctrl R 0x0 "Control signal of output_066" {{0 1 output_066_ap_vld R 0 "Control signal output_066_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x230 output_067 R 0x0 "Data signal of output_067" {{0 32 output_067 R 0 "Bit 31 to 0 Data signal of output_067"}}} {0x234 output_067_ctrl R 0x0 "Control signal of output_067" {{0 1 output_067_ap_vld R 0 "Control signal output_067_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x238 output_068 R 0x0 "Data signal of output_068" {{0 32 output_068 R 0 "Bit 31 to 0 Data signal of output_068"}}} {0x23c output_068_ctrl R 0x0 "Control signal of output_068" {{0 1 output_068_ap_vld R 0 "Control signal output_068_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x240 output_069 R 0x0 "Data signal of output_069" {{0 32 output_069 R 0 "Bit 31 to 0 Data signal of output_069"}}} {0x244 output_069_ctrl R 0x0 "Control signal of output_069" {{0 1 output_069_ap_vld R 0 "Control signal output_069_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x248 output_070 R 0x0 "Data signal of output_070" {{0 32 output_070 R 0 "Bit 31 to 0 Data signal of output_070"}}} {0x24c output_070_ctrl R 0x0 "Control signal of output_070" {{0 1 output_070_ap_vld R 0 "Control signal output_070_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x250 output_071 R 0x0 "Data signal of output_071" {{0 32 output_071 R 0 "Bit 31 to 0 Data signal of output_071"}}} {0x254 output_071_ctrl R 0x0 "Control signal of output_071" {{0 1 output_071_ap_vld R 0 "Control signal output_071_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x258 output_072 R 0x0 "Data signal of output_072" {{0 32 output_072 R 0 "Bit 31 to 0 Data signal of output_072"}}} {0x25c output_072_ctrl R 0x0 "Control signal of output_072" {{0 1 output_072_ap_vld R 0 "Control signal output_072_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x260 output_073 R 0x0 "Data signal of output_073" {{0 32 output_073 R 0 "Bit 31 to 0 Data signal of output_073"}}} {0x264 output_073_ctrl R 0x0 "Control signal of output_073" {{0 1 output_073_ap_vld R 0 "Control signal output_073_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x268 output_074 R 0x0 "Data signal of output_074" {{0 32 output_074 R 0 "Bit 31 to 0 Data signal of output_074"}}} {0x26c output_074_ctrl R 0x0 "Control signal of output_074" {{0 1 output_074_ap_vld R 0 "Control signal output_074_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x270 output_075 R 0x0 "Data signal of output_075" {{0 32 output_075 R 0 "Bit 31 to 0 Data signal of output_075"}}} {0x274 output_075_ctrl R 0x0 "Control signal of output_075" {{0 1 output_075_ap_vld R 0 "Control signal output_075_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x278 output_076 R 0x0 "Data signal of output_076" {{0 32 output_076 R 0 "Bit 31 to 0 Data signal of output_076"}}} {0x27c output_076_ctrl R 0x0 "Control signal of output_076" {{0 1 output_076_ap_vld R 0 "Control signal output_076_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x280 output_077 R 0x0 "Data signal of output_077" {{0 32 output_077 R 0 "Bit 31 to 0 Data signal of output_077"}}} {0x284 output_077_ctrl R 0x0 "Control signal of output_077" {{0 1 output_077_ap_vld R 0 "Control signal output_077_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x288 output_078 R 0x0 "Data signal of output_078" {{0 32 output_078 R 0 "Bit 31 to 0 Data signal of output_078"}}} {0x28c output_078_ctrl R 0x0 "Control signal of output_078" {{0 1 output_078_ap_vld R 0 "Control signal output_078_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x290 output_079 R 0x0 "Data signal of output_079" {{0 32 output_079 R 0 "Bit 31 to 0 Data signal of output_079"}}} {0x294 output_079_ctrl R 0x0 "Control signal of output_079" {{0 1 output_079_ap_vld R 0 "Control signal output_079_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x298 output_080 R 0x0 "Data signal of output_080" {{0 32 output_080 R 0 "Bit 31 to 0 Data signal of output_080"}}} {0x29c output_080_ctrl R 0x0 "Control signal of output_080" {{0 1 output_080_ap_vld R 0 "Control signal output_080_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2a0 output_081 R 0x0 "Data signal of output_081" {{0 32 output_081 R 0 "Bit 31 to 0 Data signal of output_081"}}} {0x2a4 output_081_ctrl R 0x0 "Control signal of output_081" {{0 1 output_081_ap_vld R 0 "Control signal output_081_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2a8 output_082 R 0x0 "Data signal of output_082" {{0 32 output_082 R 0 "Bit 31 to 0 Data signal of output_082"}}} {0x2ac output_082_ctrl R 0x0 "Control signal of output_082" {{0 1 output_082_ap_vld R 0 "Control signal output_082_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2b0 output_083 R 0x0 "Data signal of output_083" {{0 32 output_083 R 0 "Bit 31 to 0 Data signal of output_083"}}} {0x2b4 output_083_ctrl R 0x0 "Control signal of output_083" {{0 1 output_083_ap_vld R 0 "Control signal output_083_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2b8 output_084 R 0x0 "Data signal of output_084" {{0 32 output_084 R 0 "Bit 31 to 0 Data signal of output_084"}}} {0x2bc output_084_ctrl R 0x0 "Control signal of output_084" {{0 1 output_084_ap_vld R 0 "Control signal output_084_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2c0 output_085 R 0x0 "Data signal of output_085" {{0 32 output_085 R 0 "Bit 31 to 0 Data signal of output_085"}}} {0x2c4 output_085_ctrl R 0x0 "Control signal of output_085" {{0 1 output_085_ap_vld R 0 "Control signal output_085_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2c8 output_086 R 0x0 "Data signal of output_086" {{0 32 output_086 R 0 "Bit 31 to 0 Data signal of output_086"}}} {0x2cc output_086_ctrl R 0x0 "Control signal of output_086" {{0 1 output_086_ap_vld R 0 "Control signal output_086_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2d0 output_087 R 0x0 "Data signal of output_087" {{0 32 output_087 R 0 "Bit 31 to 0 Data signal of output_087"}}} {0x2d4 output_087_ctrl R 0x0 "Control signal of output_087" {{0 1 output_087_ap_vld R 0 "Control signal output_087_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2d8 output_088 R 0x0 "Data signal of output_088" {{0 32 output_088 R 0 "Bit 31 to 0 Data signal of output_088"}}} {0x2dc output_088_ctrl R 0x0 "Control signal of output_088" {{0 1 output_088_ap_vld R 0 "Control signal output_088_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2e0 output_089 R 0x0 "Data signal of output_089" {{0 32 output_089 R 0 "Bit 31 to 0 Data signal of output_089"}}} {0x2e4 output_089_ctrl R 0x0 "Control signal of output_089" {{0 1 output_089_ap_vld R 0 "Control signal output_089_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2e8 output_090 R 0x0 "Data signal of output_090" {{0 32 output_090 R 0 "Bit 31 to 0 Data signal of output_090"}}} {0x2ec output_090_ctrl R 0x0 "Control signal of output_090" {{0 1 output_090_ap_vld R 0 "Control signal output_090_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2f0 output_091 R 0x0 "Data signal of output_091" {{0 32 output_091 R 0 "Bit 31 to 0 Data signal of output_091"}}} {0x2f4 output_091_ctrl R 0x0 "Control signal of output_091" {{0 1 output_091_ap_vld R 0 "Control signal output_091_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x2f8 output_092 R 0x0 "Data signal of output_092" {{0 32 output_092 R 0 "Bit 31 to 0 Data signal of output_092"}}} {0x2fc output_092_ctrl R 0x0 "Control signal of output_092" {{0 1 output_092_ap_vld R 0 "Control signal output_092_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x300 output_093 R 0x0 "Data signal of output_093" {{0 32 output_093 R 0 "Bit 31 to 0 Data signal of output_093"}}} {0x304 output_093_ctrl R 0x0 "Control signal of output_093" {{0 1 output_093_ap_vld R 0 "Control signal output_093_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x308 output_094 R 0x0 "Data signal of output_094" {{0 32 output_094 R 0 "Bit 31 to 0 Data signal of output_094"}}} {0x30c output_094_ctrl R 0x0 "Control signal of output_094" {{0 1 output_094_ap_vld R 0 "Control signal output_094_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x310 output_095 R 0x0 "Data signal of output_095" {{0 32 output_095 R 0 "Bit 31 to 0 Data signal of output_095"}}} {0x314 output_095_ctrl R 0x0 "Control signal of output_095" {{0 1 output_095_ap_vld R 0 "Control signal output_095_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x318 output_096 R 0x0 "Data signal of output_096" {{0 32 output_096 R 0 "Bit 31 to 0 Data signal of output_096"}}} {0x31c output_096_ctrl R 0x0 "Control signal of output_096" {{0 1 output_096_ap_vld R 0 "Control signal output_096_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x320 output_097 R 0x0 "Data signal of output_097" {{0 32 output_097 R 0 "Bit 31 to 0 Data signal of output_097"}}} {0x324 output_097_ctrl R 0x0 "Control signal of output_097" {{0 1 output_097_ap_vld R 0 "Control signal output_097_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x328 output_098 R 0x0 "Data signal of output_098" {{0 32 output_098 R 0 "Bit 31 to 0 Data signal of output_098"}}} {0x32c output_098_ctrl R 0x0 "Control signal of output_098" {{0 1 output_098_ap_vld R 0 "Control signal output_098_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x330 output_099 R 0x0 "Data signal of output_099" {{0 32 output_099 R 0 "Bit 31 to 0 Data signal of output_099"}}} {0x334 output_099_ctrl R 0x0 "Control signal of output_099" {{0 1 output_099_ap_vld R 0 "Control signal output_099_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x338 output_100 R 0x0 "Data signal of output_100" {{0 32 output_100 R 0 "Bit 31 to 0 Data signal of output_100"}}} {0x33c output_100_ctrl R 0x0 "Control signal of output_100" {{0 1 output_100_ap_vld R 0 "Control signal output_100_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x340 output_101 R 0x0 "Data signal of output_101" {{0 32 output_101 R 0 "Bit 31 to 0 Data signal of output_101"}}} {0x344 output_101_ctrl R 0x0 "Control signal of output_101" {{0 1 output_101_ap_vld R 0 "Control signal output_101_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x348 output_102 R 0x0 "Data signal of output_102" {{0 32 output_102 R 0 "Bit 31 to 0 Data signal of output_102"}}} {0x34c output_102_ctrl R 0x0 "Control signal of output_102" {{0 1 output_102_ap_vld R 0 "Control signal output_102_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x350 output_103 R 0x0 "Data signal of output_103" {{0 32 output_103 R 0 "Bit 31 to 0 Data signal of output_103"}}} {0x354 output_103_ctrl R 0x0 "Control signal of output_103" {{0 1 output_103_ap_vld R 0 "Control signal output_103_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x358 output_104 R 0x0 "Data signal of output_104" {{0 32 output_104 R 0 "Bit 31 to 0 Data signal of output_104"}}} {0x35c output_104_ctrl R 0x0 "Control signal of output_104" {{0 1 output_104_ap_vld R 0 "Control signal output_104_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x360 output_105 R 0x0 "Data signal of output_105" {{0 32 output_105 R 0 "Bit 31 to 0 Data signal of output_105"}}} {0x364 output_105_ctrl R 0x0 "Control signal of output_105" {{0 1 output_105_ap_vld R 0 "Control signal output_105_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x368 output_106 R 0x0 "Data signal of output_106" {{0 32 output_106 R 0 "Bit 31 to 0 Data signal of output_106"}}} {0x36c output_106_ctrl R 0x0 "Control signal of output_106" {{0 1 output_106_ap_vld R 0 "Control signal output_106_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x370 output_107 R 0x0 "Data signal of output_107" {{0 32 output_107 R 0 "Bit 31 to 0 Data signal of output_107"}}} {0x374 output_107_ctrl R 0x0 "Control signal of output_107" {{0 1 output_107_ap_vld R 0 "Control signal output_107_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x378 output_108 R 0x0 "Data signal of output_108" {{0 32 output_108 R 0 "Bit 31 to 0 Data signal of output_108"}}} {0x37c output_108_ctrl R 0x0 "Control signal of output_108" {{0 1 output_108_ap_vld R 0 "Control signal output_108_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x380 output_109 R 0x0 "Data signal of output_109" {{0 32 output_109 R 0 "Bit 31 to 0 Data signal of output_109"}}} {0x384 output_109_ctrl R 0x0 "Control signal of output_109" {{0 1 output_109_ap_vld R 0 "Control signal output_109_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x388 output_110 R 0x0 "Data signal of output_110" {{0 32 output_110 R 0 "Bit 31 to 0 Data signal of output_110"}}} {0x38c output_110_ctrl R 0x0 "Control signal of output_110" {{0 1 output_110_ap_vld R 0 "Control signal output_110_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x390 output_111 R 0x0 "Data signal of output_111" {{0 32 output_111 R 0 "Bit 31 to 0 Data signal of output_111"}}} {0x394 output_111_ctrl R 0x0 "Control signal of output_111" {{0 1 output_111_ap_vld R 0 "Control signal output_111_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x398 output_112 R 0x0 "Data signal of output_112" {{0 32 output_112 R 0 "Bit 31 to 0 Data signal of output_112"}}} {0x39c output_112_ctrl R 0x0 "Control signal of output_112" {{0 1 output_112_ap_vld R 0 "Control signal output_112_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3a0 output_113 R 0x0 "Data signal of output_113" {{0 32 output_113 R 0 "Bit 31 to 0 Data signal of output_113"}}} {0x3a4 output_113_ctrl R 0x0 "Control signal of output_113" {{0 1 output_113_ap_vld R 0 "Control signal output_113_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3a8 output_114 R 0x0 "Data signal of output_114" {{0 32 output_114 R 0 "Bit 31 to 0 Data signal of output_114"}}} {0x3ac output_114_ctrl R 0x0 "Control signal of output_114" {{0 1 output_114_ap_vld R 0 "Control signal output_114_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3b0 output_115 R 0x0 "Data signal of output_115" {{0 32 output_115 R 0 "Bit 31 to 0 Data signal of output_115"}}} {0x3b4 output_115_ctrl R 0x0 "Control signal of output_115" {{0 1 output_115_ap_vld R 0 "Control signal output_115_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3b8 output_116 R 0x0 "Data signal of output_116" {{0 32 output_116 R 0 "Bit 31 to 0 Data signal of output_116"}}} {0x3bc output_116_ctrl R 0x0 "Control signal of output_116" {{0 1 output_116_ap_vld R 0 "Control signal output_116_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3c0 output_117 R 0x0 "Data signal of output_117" {{0 32 output_117 R 0 "Bit 31 to 0 Data signal of output_117"}}} {0x3c4 output_117_ctrl R 0x0 "Control signal of output_117" {{0 1 output_117_ap_vld R 0 "Control signal output_117_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3c8 output_118 R 0x0 "Data signal of output_118" {{0 32 output_118 R 0 "Bit 31 to 0 Data signal of output_118"}}} {0x3cc output_118_ctrl R 0x0 "Control signal of output_118" {{0 1 output_118_ap_vld R 0 "Control signal output_118_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3d0 output_119 R 0x0 "Data signal of output_119" {{0 32 output_119 R 0 "Bit 31 to 0 Data signal of output_119"}}} {0x3d4 output_119_ctrl R 0x0 "Control signal of output_119" {{0 1 output_119_ap_vld R 0 "Control signal output_119_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3d8 output_120 R 0x0 "Data signal of output_120" {{0 32 output_120 R 0 "Bit 31 to 0 Data signal of output_120"}}} {0x3dc output_120_ctrl R 0x0 "Control signal of output_120" {{0 1 output_120_ap_vld R 0 "Control signal output_120_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3e0 output_121 R 0x0 "Data signal of output_121" {{0 32 output_121 R 0 "Bit 31 to 0 Data signal of output_121"}}} {0x3e4 output_121_ctrl R 0x0 "Control signal of output_121" {{0 1 output_121_ap_vld R 0 "Control signal output_121_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3e8 output_122 R 0x0 "Data signal of output_122" {{0 32 output_122 R 0 "Bit 31 to 0 Data signal of output_122"}}} {0x3ec output_122_ctrl R 0x0 "Control signal of output_122" {{0 1 output_122_ap_vld R 0 "Control signal output_122_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3f0 output_123 R 0x0 "Data signal of output_123" {{0 32 output_123 R 0 "Bit 31 to 0 Data signal of output_123"}}} {0x3f4 output_123_ctrl R 0x0 "Control signal of output_123" {{0 1 output_123_ap_vld R 0 "Control signal output_123_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x3f8 output_124 R 0x0 "Data signal of output_124" {{0 32 output_124 R 0 "Bit 31 to 0 Data signal of output_124"}}} {0x3fc output_124_ctrl R 0x0 "Control signal of output_124" {{0 1 output_124_ap_vld R 0 "Control signal output_124_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x400 output_125 R 0x0 "Data signal of output_125" {{0 32 output_125 R 0 "Bit 31 to 0 Data signal of output_125"}}} {0x404 output_125_ctrl R 0x0 "Control signal of output_125" {{0 1 output_125_ap_vld R 0 "Control signal output_125_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x408 output_126 R 0x0 "Data signal of output_126" {{0 32 output_126 R 0 "Bit 31 to 0 Data signal of output_126"}}} {0x40c output_126_ctrl R 0x0 "Control signal of output_126" {{0 1 output_126_ap_vld R 0 "Control signal output_126_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x410 output_127 R 0x0 "Data signal of output_127" {{0 32 output_127 R 0 "Bit 31 to 0 Data signal of output_127"}}} {0x414 output_127_ctrl R 0x0 "Control signal of output_127" {{0 1 output_127_ap_vld R 0 "Control signal output_127_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x418 output_128 R 0x0 "Data signal of output_128" {{0 32 output_128 R 0 "Bit 31 to 0 Data signal of output_128"}}} {0x41c output_128_ctrl R 0x0 "Control signal of output_128" {{0 1 output_128_ap_vld R 0 "Control signal output_128_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x420 output_129 R 0x0 "Data signal of output_129" {{0 32 output_129 R 0 "Bit 31 to 0 Data signal of output_129"}}} {0x424 output_129_ctrl R 0x0 "Control signal of output_129" {{0 1 output_129_ap_vld R 0 "Control signal output_129_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x428 output_130 R 0x0 "Data signal of output_130" {{0 32 output_130 R 0 "Bit 31 to 0 Data signal of output_130"}}} {0x42c output_130_ctrl R 0x0 "Control signal of output_130" {{0 1 output_130_ap_vld R 0 "Control signal output_130_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x430 output_131 R 0x0 "Data signal of output_131" {{0 32 output_131 R 0 "Bit 31 to 0 Data signal of output_131"}}} {0x434 output_131_ctrl R 0x0 "Control signal of output_131" {{0 1 output_131_ap_vld R 0 "Control signal output_131_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x438 output_132 R 0x0 "Data signal of output_132" {{0 32 output_132 R 0 "Bit 31 to 0 Data signal of output_132"}}} {0x43c output_132_ctrl R 0x0 "Control signal of output_132" {{0 1 output_132_ap_vld R 0 "Control signal output_132_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x440 output_133 R 0x0 "Data signal of output_133" {{0 32 output_133 R 0 "Bit 31 to 0 Data signal of output_133"}}} {0x444 output_133_ctrl R 0x0 "Control signal of output_133" {{0 1 output_133_ap_vld R 0 "Control signal output_133_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x448 output_134 R 0x0 "Data signal of output_134" {{0 32 output_134 R 0 "Bit 31 to 0 Data signal of output_134"}}} {0x44c output_134_ctrl R 0x0 "Control signal of output_134" {{0 1 output_134_ap_vld R 0 "Control signal output_134_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x450 output_135 R 0x0 "Data signal of output_135" {{0 32 output_135 R 0 "Bit 31 to 0 Data signal of output_135"}}} {0x454 output_135_ctrl R 0x0 "Control signal of output_135" {{0 1 output_135_ap_vld R 0 "Control signal output_135_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x458 output_136 R 0x0 "Data signal of output_136" {{0 32 output_136 R 0 "Bit 31 to 0 Data signal of output_136"}}} {0x45c output_136_ctrl R 0x0 "Control signal of output_136" {{0 1 output_136_ap_vld R 0 "Control signal output_136_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x460 output_137 R 0x0 "Data signal of output_137" {{0 32 output_137 R 0 "Bit 31 to 0 Data signal of output_137"}}} {0x464 output_137_ctrl R 0x0 "Control signal of output_137" {{0 1 output_137_ap_vld R 0 "Control signal output_137_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x468 output_138 R 0x0 "Data signal of output_138" {{0 32 output_138 R 0 "Bit 31 to 0 Data signal of output_138"}}} {0x46c output_138_ctrl R 0x0 "Control signal of output_138" {{0 1 output_138_ap_vld R 0 "Control signal output_138_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x470 output_139 R 0x0 "Data signal of output_139" {{0 32 output_139 R 0 "Bit 31 to 0 Data signal of output_139"}}} {0x474 output_139_ctrl R 0x0 "Control signal of output_139" {{0 1 output_139_ap_vld R 0 "Control signal output_139_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x478 output_140 R 0x0 "Data signal of output_140" {{0 32 output_140 R 0 "Bit 31 to 0 Data signal of output_140"}}} {0x47c output_140_ctrl R 0x0 "Control signal of output_140" {{0 1 output_140_ap_vld R 0 "Control signal output_140_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x480 output_141 R 0x0 "Data signal of output_141" {{0 32 output_141 R 0 "Bit 31 to 0 Data signal of output_141"}}} {0x484 output_141_ctrl R 0x0 "Control signal of output_141" {{0 1 output_141_ap_vld R 0 "Control signal output_141_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x488 output_142 R 0x0 "Data signal of output_142" {{0 32 output_142 R 0 "Bit 31 to 0 Data signal of output_142"}}} {0x48c output_142_ctrl R 0x0 "Control signal of output_142" {{0 1 output_142_ap_vld R 0 "Control signal output_142_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x490 output_143 R 0x0 "Data signal of output_143" {{0 32 output_143 R 0 "Bit 31 to 0 Data signal of output_143"}}} {0x494 output_143_ctrl R 0x0 "Control signal of output_143" {{0 1 output_143_ap_vld R 0 "Control signal output_143_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x498 output_144 R 0x0 "Data signal of output_144" {{0 32 output_144 R 0 "Bit 31 to 0 Data signal of output_144"}}} {0x49c output_144_ctrl R 0x0 "Control signal of output_144" {{0 1 output_144_ap_vld R 0 "Control signal output_144_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4a0 output_145 R 0x0 "Data signal of output_145" {{0 32 output_145 R 0 "Bit 31 to 0 Data signal of output_145"}}} {0x4a4 output_145_ctrl R 0x0 "Control signal of output_145" {{0 1 output_145_ap_vld R 0 "Control signal output_145_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4a8 output_146 R 0x0 "Data signal of output_146" {{0 32 output_146 R 0 "Bit 31 to 0 Data signal of output_146"}}} {0x4ac output_146_ctrl R 0x0 "Control signal of output_146" {{0 1 output_146_ap_vld R 0 "Control signal output_146_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4b0 output_147 R 0x0 "Data signal of output_147" {{0 32 output_147 R 0 "Bit 31 to 0 Data signal of output_147"}}} {0x4b4 output_147_ctrl R 0x0 "Control signal of output_147" {{0 1 output_147_ap_vld R 0 "Control signal output_147_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4b8 output_148 R 0x0 "Data signal of output_148" {{0 32 output_148 R 0 "Bit 31 to 0 Data signal of output_148"}}} {0x4bc output_148_ctrl R 0x0 "Control signal of output_148" {{0 1 output_148_ap_vld R 0 "Control signal output_148_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4c0 output_149 R 0x0 "Data signal of output_149" {{0 32 output_149 R 0 "Bit 31 to 0 Data signal of output_149"}}} {0x4c4 output_149_ctrl R 0x0 "Control signal of output_149" {{0 1 output_149_ap_vld R 0 "Control signal output_149_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4c8 output_150 R 0x0 "Data signal of output_150" {{0 32 output_150 R 0 "Bit 31 to 0 Data signal of output_150"}}} {0x4cc output_150_ctrl R 0x0 "Control signal of output_150" {{0 1 output_150_ap_vld R 0 "Control signal output_150_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4d0 output_151 R 0x0 "Data signal of output_151" {{0 32 output_151 R 0 "Bit 31 to 0 Data signal of output_151"}}} {0x4d4 output_151_ctrl R 0x0 "Control signal of output_151" {{0 1 output_151_ap_vld R 0 "Control signal output_151_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4d8 output_152 R 0x0 "Data signal of output_152" {{0 32 output_152 R 0 "Bit 31 to 0 Data signal of output_152"}}} {0x4dc output_152_ctrl R 0x0 "Control signal of output_152" {{0 1 output_152_ap_vld R 0 "Control signal output_152_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4e0 output_153 R 0x0 "Data signal of output_153" {{0 32 output_153 R 0 "Bit 31 to 0 Data signal of output_153"}}} {0x4e4 output_153_ctrl R 0x0 "Control signal of output_153" {{0 1 output_153_ap_vld R 0 "Control signal output_153_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4e8 output_154 R 0x0 "Data signal of output_154" {{0 32 output_154 R 0 "Bit 31 to 0 Data signal of output_154"}}} {0x4ec output_154_ctrl R 0x0 "Control signal of output_154" {{0 1 output_154_ap_vld R 0 "Control signal output_154_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4f0 output_155 R 0x0 "Data signal of output_155" {{0 32 output_155 R 0 "Bit 31 to 0 Data signal of output_155"}}} {0x4f4 output_155_ctrl R 0x0 "Control signal of output_155" {{0 1 output_155_ap_vld R 0 "Control signal output_155_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4f8 output_156 R 0x0 "Data signal of output_156" {{0 32 output_156 R 0 "Bit 31 to 0 Data signal of output_156"}}} {0x4fc output_156_ctrl R 0x0 "Control signal of output_156" {{0 1 output_156_ap_vld R 0 "Control signal output_156_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x500 output_157 R 0x0 "Data signal of output_157" {{0 32 output_157 R 0 "Bit 31 to 0 Data signal of output_157"}}} {0x504 output_157_ctrl R 0x0 "Control signal of output_157" {{0 1 output_157_ap_vld R 0 "Control signal output_157_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x508 output_158 R 0x0 "Data signal of output_158" {{0 32 output_158 R 0 "Bit 31 to 0 Data signal of output_158"}}} {0x50c output_158_ctrl R 0x0 "Control signal of output_158" {{0 1 output_158_ap_vld R 0 "Control signal output_158_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x510 output_159 R 0x0 "Data signal of output_159" {{0 32 output_159 R 0 "Bit 31 to 0 Data signal of output_159"}}} {0x514 output_159_ctrl R 0x0 "Control signal of output_159" {{0 1 output_159_ap_vld R 0 "Control signal output_159_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x518 output_160 R 0x0 "Data signal of output_160" {{0 32 output_160 R 0 "Bit 31 to 0 Data signal of output_160"}}} {0x51c output_160_ctrl R 0x0 "Control signal of output_160" {{0 1 output_160_ap_vld R 0 "Control signal output_160_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x520 output_161 R 0x0 "Data signal of output_161" {{0 32 output_161 R 0 "Bit 31 to 0 Data signal of output_161"}}} {0x524 output_161_ctrl R 0x0 "Control signal of output_161" {{0 1 output_161_ap_vld R 0 "Control signal output_161_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x528 output_162 R 0x0 "Data signal of output_162" {{0 32 output_162 R 0 "Bit 31 to 0 Data signal of output_162"}}} {0x52c output_162_ctrl R 0x0 "Control signal of output_162" {{0 1 output_162_ap_vld R 0 "Control signal output_162_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x530 output_163 R 0x0 "Data signal of output_163" {{0 32 output_163 R 0 "Bit 31 to 0 Data signal of output_163"}}} {0x534 output_163_ctrl R 0x0 "Control signal of output_163" {{0 1 output_163_ap_vld R 0 "Control signal output_163_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x538 output_164 R 0x0 "Data signal of output_164" {{0 32 output_164 R 0 "Bit 31 to 0 Data signal of output_164"}}} {0x53c output_164_ctrl R 0x0 "Control signal of output_164" {{0 1 output_164_ap_vld R 0 "Control signal output_164_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x540 output_165 R 0x0 "Data signal of output_165" {{0 32 output_165 R 0 "Bit 31 to 0 Data signal of output_165"}}} {0x544 output_165_ctrl R 0x0 "Control signal of output_165" {{0 1 output_165_ap_vld R 0 "Control signal output_165_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x548 output_166 R 0x0 "Data signal of output_166" {{0 32 output_166 R 0 "Bit 31 to 0 Data signal of output_166"}}} {0x54c output_166_ctrl R 0x0 "Control signal of output_166" {{0 1 output_166_ap_vld R 0 "Control signal output_166_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x550 output_167 R 0x0 "Data signal of output_167" {{0 32 output_167 R 0 "Bit 31 to 0 Data signal of output_167"}}} {0x554 output_167_ctrl R 0x0 "Control signal of output_167" {{0 1 output_167_ap_vld R 0 "Control signal output_167_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x558 output_168 R 0x0 "Data signal of output_168" {{0 32 output_168 R 0 "Bit 31 to 0 Data signal of output_168"}}} {0x55c output_168_ctrl R 0x0 "Control signal of output_168" {{0 1 output_168_ap_vld R 0 "Control signal output_168_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x560 output_169 R 0x0 "Data signal of output_169" {{0 32 output_169 R 0 "Bit 31 to 0 Data signal of output_169"}}} {0x564 output_169_ctrl R 0x0 "Control signal of output_169" {{0 1 output_169_ap_vld R 0 "Control signal output_169_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x568 output_170 R 0x0 "Data signal of output_170" {{0 32 output_170 R 0 "Bit 31 to 0 Data signal of output_170"}}} {0x56c output_170_ctrl R 0x0 "Control signal of output_170" {{0 1 output_170_ap_vld R 0 "Control signal output_170_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x570 output_171 R 0x0 "Data signal of output_171" {{0 32 output_171 R 0 "Bit 31 to 0 Data signal of output_171"}}} {0x574 output_171_ctrl R 0x0 "Control signal of output_171" {{0 1 output_171_ap_vld R 0 "Control signal output_171_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x578 output_172 R 0x0 "Data signal of output_172" {{0 32 output_172 R 0 "Bit 31 to 0 Data signal of output_172"}}} {0x57c output_172_ctrl R 0x0 "Control signal of output_172" {{0 1 output_172_ap_vld R 0 "Control signal output_172_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x580 output_173 R 0x0 "Data signal of output_173" {{0 32 output_173 R 0 "Bit 31 to 0 Data signal of output_173"}}} {0x584 output_173_ctrl R 0x0 "Control signal of output_173" {{0 1 output_173_ap_vld R 0 "Control signal output_173_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x588 output_174 R 0x0 "Data signal of output_174" {{0 32 output_174 R 0 "Bit 31 to 0 Data signal of output_174"}}} {0x58c output_174_ctrl R 0x0 "Control signal of output_174" {{0 1 output_174_ap_vld R 0 "Control signal output_174_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x590 output_175 R 0x0 "Data signal of output_175" {{0 32 output_175 R 0 "Bit 31 to 0 Data signal of output_175"}}} {0x594 output_175_ctrl R 0x0 "Control signal of output_175" {{0 1 output_175_ap_vld R 0 "Control signal output_175_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x598 output_176 R 0x0 "Data signal of output_176" {{0 32 output_176 R 0 "Bit 31 to 0 Data signal of output_176"}}} {0x59c output_176_ctrl R 0x0 "Control signal of output_176" {{0 1 output_176_ap_vld R 0 "Control signal output_176_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5a0 output_177 R 0x0 "Data signal of output_177" {{0 32 output_177 R 0 "Bit 31 to 0 Data signal of output_177"}}} {0x5a4 output_177_ctrl R 0x0 "Control signal of output_177" {{0 1 output_177_ap_vld R 0 "Control signal output_177_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5a8 output_178 R 0x0 "Data signal of output_178" {{0 32 output_178 R 0 "Bit 31 to 0 Data signal of output_178"}}} {0x5ac output_178_ctrl R 0x0 "Control signal of output_178" {{0 1 output_178_ap_vld R 0 "Control signal output_178_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5b0 output_179 R 0x0 "Data signal of output_179" {{0 32 output_179 R 0 "Bit 31 to 0 Data signal of output_179"}}} {0x5b4 output_179_ctrl R 0x0 "Control signal of output_179" {{0 1 output_179_ap_vld R 0 "Control signal output_179_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5b8 output_180 R 0x0 "Data signal of output_180" {{0 32 output_180 R 0 "Bit 31 to 0 Data signal of output_180"}}} {0x5bc output_180_ctrl R 0x0 "Control signal of output_180" {{0 1 output_180_ap_vld R 0 "Control signal output_180_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5c0 output_181 R 0x0 "Data signal of output_181" {{0 32 output_181 R 0 "Bit 31 to 0 Data signal of output_181"}}} {0x5c4 output_181_ctrl R 0x0 "Control signal of output_181" {{0 1 output_181_ap_vld R 0 "Control signal output_181_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5c8 output_182 R 0x0 "Data signal of output_182" {{0 32 output_182 R 0 "Bit 31 to 0 Data signal of output_182"}}} {0x5cc output_182_ctrl R 0x0 "Control signal of output_182" {{0 1 output_182_ap_vld R 0 "Control signal output_182_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5d0 output_183 R 0x0 "Data signal of output_183" {{0 32 output_183 R 0 "Bit 31 to 0 Data signal of output_183"}}} {0x5d4 output_183_ctrl R 0x0 "Control signal of output_183" {{0 1 output_183_ap_vld R 0 "Control signal output_183_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5d8 output_184 R 0x0 "Data signal of output_184" {{0 32 output_184 R 0 "Bit 31 to 0 Data signal of output_184"}}} {0x5dc output_184_ctrl R 0x0 "Control signal of output_184" {{0 1 output_184_ap_vld R 0 "Control signal output_184_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5e0 output_185 R 0x0 "Data signal of output_185" {{0 32 output_185 R 0 "Bit 31 to 0 Data signal of output_185"}}} {0x5e4 output_185_ctrl R 0x0 "Control signal of output_185" {{0 1 output_185_ap_vld R 0 "Control signal output_185_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5e8 output_186 R 0x0 "Data signal of output_186" {{0 32 output_186 R 0 "Bit 31 to 0 Data signal of output_186"}}} {0x5ec output_186_ctrl R 0x0 "Control signal of output_186" {{0 1 output_186_ap_vld R 0 "Control signal output_186_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5f0 output_187 R 0x0 "Data signal of output_187" {{0 32 output_187 R 0 "Bit 31 to 0 Data signal of output_187"}}} {0x5f4 output_187_ctrl R 0x0 "Control signal of output_187" {{0 1 output_187_ap_vld R 0 "Control signal output_187_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5f8 output_188 R 0x0 "Data signal of output_188" {{0 32 output_188 R 0 "Bit 31 to 0 Data signal of output_188"}}} {0x5fc output_188_ctrl R 0x0 "Control signal of output_188" {{0 1 output_188_ap_vld R 0 "Control signal output_188_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x600 output_189 R 0x0 "Data signal of output_189" {{0 32 output_189 R 0 "Bit 31 to 0 Data signal of output_189"}}} {0x604 output_189_ctrl R 0x0 "Control signal of output_189" {{0 1 output_189_ap_vld R 0 "Control signal output_189_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x608 output_190 R 0x0 "Data signal of output_190" {{0 32 output_190 R 0 "Bit 31 to 0 Data signal of output_190"}}} {0x60c output_190_ctrl R 0x0 "Control signal of output_190" {{0 1 output_190_ap_vld R 0 "Control signal output_190_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x610 output_191 R 0x0 "Data signal of output_191" {{0 32 output_191 R 0 "Bit 31 to 0 Data signal of output_191"}}} {0x614 output_191_ctrl R 0x0 "Control signal of output_191" {{0 1 output_191_ap_vld R 0 "Control signal output_191_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x618 output_192 R 0x0 "Data signal of output_192" {{0 32 output_192 R 0 "Bit 31 to 0 Data signal of output_192"}}} {0x61c output_192_ctrl R 0x0 "Control signal of output_192" {{0 1 output_192_ap_vld R 0 "Control signal output_192_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x620 output_193 R 0x0 "Data signal of output_193" {{0 32 output_193 R 0 "Bit 31 to 0 Data signal of output_193"}}} {0x624 output_193_ctrl R 0x0 "Control signal of output_193" {{0 1 output_193_ap_vld R 0 "Control signal output_193_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x628 output_194 R 0x0 "Data signal of output_194" {{0 32 output_194 R 0 "Bit 31 to 0 Data signal of output_194"}}} {0x62c output_194_ctrl R 0x0 "Control signal of output_194" {{0 1 output_194_ap_vld R 0 "Control signal output_194_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x630 output_195 R 0x0 "Data signal of output_195" {{0 32 output_195 R 0 "Bit 31 to 0 Data signal of output_195"}}} {0x634 output_195_ctrl R 0x0 "Control signal of output_195" {{0 1 output_195_ap_vld R 0 "Control signal output_195_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x638 output_196 R 0x0 "Data signal of output_196" {{0 32 output_196 R 0 "Bit 31 to 0 Data signal of output_196"}}} {0x63c output_196_ctrl R 0x0 "Control signal of output_196" {{0 1 output_196_ap_vld R 0 "Control signal output_196_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x640 output_197 R 0x0 "Data signal of output_197" {{0 32 output_197 R 0 "Bit 31 to 0 Data signal of output_197"}}} {0x644 output_197_ctrl R 0x0 "Control signal of output_197" {{0 1 output_197_ap_vld R 0 "Control signal output_197_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x648 output_198 R 0x0 "Data signal of output_198" {{0 32 output_198 R 0 "Bit 31 to 0 Data signal of output_198"}}} {0x64c output_198_ctrl R 0x0 "Control signal of output_198" {{0 1 output_198_ap_vld R 0 "Control signal output_198_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x650 output_199 R 0x0 "Data signal of output_199" {{0 32 output_199 R 0 "Bit 31 to 0 Data signal of output_199"}}} {0x654 output_199_ctrl R 0x0 "Control signal of output_199" {{0 1 output_199_ap_vld R 0 "Control signal output_199_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x658 output_200 R 0x0 "Data signal of output_200" {{0 32 output_200 R 0 "Bit 31 to 0 Data signal of output_200"}}} {0x65c output_200_ctrl R 0x0 "Control signal of output_200" {{0 1 output_200_ap_vld R 0 "Control signal output_200_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x660 output_201 R 0x0 "Data signal of output_201" {{0 32 output_201 R 0 "Bit 31 to 0 Data signal of output_201"}}} {0x664 output_201_ctrl R 0x0 "Control signal of output_201" {{0 1 output_201_ap_vld R 0 "Control signal output_201_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x668 output_202 R 0x0 "Data signal of output_202" {{0 32 output_202 R 0 "Bit 31 to 0 Data signal of output_202"}}} {0x66c output_202_ctrl R 0x0 "Control signal of output_202" {{0 1 output_202_ap_vld R 0 "Control signal output_202_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x670 output_203 R 0x0 "Data signal of output_203" {{0 32 output_203 R 0 "Bit 31 to 0 Data signal of output_203"}}} {0x674 output_203_ctrl R 0x0 "Control signal of output_203" {{0 1 output_203_ap_vld R 0 "Control signal output_203_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x678 output_204 R 0x0 "Data signal of output_204" {{0 32 output_204 R 0 "Bit 31 to 0 Data signal of output_204"}}} {0x67c output_204_ctrl R 0x0 "Control signal of output_204" {{0 1 output_204_ap_vld R 0 "Control signal output_204_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x680 output_205 R 0x0 "Data signal of output_205" {{0 32 output_205 R 0 "Bit 31 to 0 Data signal of output_205"}}} {0x684 output_205_ctrl R 0x0 "Control signal of output_205" {{0 1 output_205_ap_vld R 0 "Control signal output_205_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x688 output_206 R 0x0 "Data signal of output_206" {{0 32 output_206 R 0 "Bit 31 to 0 Data signal of output_206"}}} {0x68c output_206_ctrl R 0x0 "Control signal of output_206" {{0 1 output_206_ap_vld R 0 "Control signal output_206_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x690 output_207 R 0x0 "Data signal of output_207" {{0 32 output_207 R 0 "Bit 31 to 0 Data signal of output_207"}}} {0x694 output_207_ctrl R 0x0 "Control signal of output_207" {{0 1 output_207_ap_vld R 0 "Control signal output_207_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x698 output_208 R 0x0 "Data signal of output_208" {{0 32 output_208 R 0 "Bit 31 to 0 Data signal of output_208"}}} {0x69c output_208_ctrl R 0x0 "Control signal of output_208" {{0 1 output_208_ap_vld R 0 "Control signal output_208_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6a0 output_209 R 0x0 "Data signal of output_209" {{0 32 output_209 R 0 "Bit 31 to 0 Data signal of output_209"}}} {0x6a4 output_209_ctrl R 0x0 "Control signal of output_209" {{0 1 output_209_ap_vld R 0 "Control signal output_209_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6a8 output_210 R 0x0 "Data signal of output_210" {{0 32 output_210 R 0 "Bit 31 to 0 Data signal of output_210"}}} {0x6ac output_210_ctrl R 0x0 "Control signal of output_210" {{0 1 output_210_ap_vld R 0 "Control signal output_210_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6b0 output_211 R 0x0 "Data signal of output_211" {{0 32 output_211 R 0 "Bit 31 to 0 Data signal of output_211"}}} {0x6b4 output_211_ctrl R 0x0 "Control signal of output_211" {{0 1 output_211_ap_vld R 0 "Control signal output_211_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6b8 output_212 R 0x0 "Data signal of output_212" {{0 32 output_212 R 0 "Bit 31 to 0 Data signal of output_212"}}} {0x6bc output_212_ctrl R 0x0 "Control signal of output_212" {{0 1 output_212_ap_vld R 0 "Control signal output_212_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6c0 output_213 R 0x0 "Data signal of output_213" {{0 32 output_213 R 0 "Bit 31 to 0 Data signal of output_213"}}} {0x6c4 output_213_ctrl R 0x0 "Control signal of output_213" {{0 1 output_213_ap_vld R 0 "Control signal output_213_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6c8 output_214 R 0x0 "Data signal of output_214" {{0 32 output_214 R 0 "Bit 31 to 0 Data signal of output_214"}}} {0x6cc output_214_ctrl R 0x0 "Control signal of output_214" {{0 1 output_214_ap_vld R 0 "Control signal output_214_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6d0 output_215 R 0x0 "Data signal of output_215" {{0 32 output_215 R 0 "Bit 31 to 0 Data signal of output_215"}}} {0x6d4 output_215_ctrl R 0x0 "Control signal of output_215" {{0 1 output_215_ap_vld R 0 "Control signal output_215_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6d8 output_216 R 0x0 "Data signal of output_216" {{0 32 output_216 R 0 "Bit 31 to 0 Data signal of output_216"}}} {0x6dc output_216_ctrl R 0x0 "Control signal of output_216" {{0 1 output_216_ap_vld R 0 "Control signal output_216_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6e0 output_217 R 0x0 "Data signal of output_217" {{0 32 output_217 R 0 "Bit 31 to 0 Data signal of output_217"}}} {0x6e4 output_217_ctrl R 0x0 "Control signal of output_217" {{0 1 output_217_ap_vld R 0 "Control signal output_217_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6e8 output_218 R 0x0 "Data signal of output_218" {{0 32 output_218 R 0 "Bit 31 to 0 Data signal of output_218"}}} {0x6ec output_218_ctrl R 0x0 "Control signal of output_218" {{0 1 output_218_ap_vld R 0 "Control signal output_218_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6f0 output_219 R 0x0 "Data signal of output_219" {{0 32 output_219 R 0 "Bit 31 to 0 Data signal of output_219"}}} {0x6f4 output_219_ctrl R 0x0 "Control signal of output_219" {{0 1 output_219_ap_vld R 0 "Control signal output_219_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6f8 output_220 R 0x0 "Data signal of output_220" {{0 32 output_220 R 0 "Bit 31 to 0 Data signal of output_220"}}} {0x6fc output_220_ctrl R 0x0 "Control signal of output_220" {{0 1 output_220_ap_vld R 0 "Control signal output_220_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x700 output_221 R 0x0 "Data signal of output_221" {{0 32 output_221 R 0 "Bit 31 to 0 Data signal of output_221"}}} {0x704 output_221_ctrl R 0x0 "Control signal of output_221" {{0 1 output_221_ap_vld R 0 "Control signal output_221_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x708 output_222 R 0x0 "Data signal of output_222" {{0 32 output_222 R 0 "Bit 31 to 0 Data signal of output_222"}}} {0x70c output_222_ctrl R 0x0 "Control signal of output_222" {{0 1 output_222_ap_vld R 0 "Control signal output_222_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x710 output_223 R 0x0 "Data signal of output_223" {{0 32 output_223 R 0 "Bit 31 to 0 Data signal of output_223"}}} {0x714 output_223_ctrl R 0x0 "Control signal of output_223" {{0 1 output_223_ap_vld R 0 "Control signal output_223_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x718 output_224 R 0x0 "Data signal of output_224" {{0 32 output_224 R 0 "Bit 31 to 0 Data signal of output_224"}}} {0x71c output_224_ctrl R 0x0 "Control signal of output_224" {{0 1 output_224_ap_vld R 0 "Control signal output_224_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x720 output_225 R 0x0 "Data signal of output_225" {{0 32 output_225 R 0 "Bit 31 to 0 Data signal of output_225"}}} {0x724 output_225_ctrl R 0x0 "Control signal of output_225" {{0 1 output_225_ap_vld R 0 "Control signal output_225_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x728 output_226 R 0x0 "Data signal of output_226" {{0 32 output_226 R 0 "Bit 31 to 0 Data signal of output_226"}}} {0x72c output_226_ctrl R 0x0 "Control signal of output_226" {{0 1 output_226_ap_vld R 0 "Control signal output_226_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x730 output_227 R 0x0 "Data signal of output_227" {{0 32 output_227 R 0 "Bit 31 to 0 Data signal of output_227"}}} {0x734 output_227_ctrl R 0x0 "Control signal of output_227" {{0 1 output_227_ap_vld R 0 "Control signal output_227_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x738 output_228 R 0x0 "Data signal of output_228" {{0 32 output_228 R 0 "Bit 31 to 0 Data signal of output_228"}}} {0x73c output_228_ctrl R 0x0 "Control signal of output_228" {{0 1 output_228_ap_vld R 0 "Control signal output_228_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x740 output_229 R 0x0 "Data signal of output_229" {{0 32 output_229 R 0 "Bit 31 to 0 Data signal of output_229"}}} {0x744 output_229_ctrl R 0x0 "Control signal of output_229" {{0 1 output_229_ap_vld R 0 "Control signal output_229_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x748 output_230 R 0x0 "Data signal of output_230" {{0 32 output_230 R 0 "Bit 31 to 0 Data signal of output_230"}}} {0x74c output_230_ctrl R 0x0 "Control signal of output_230" {{0 1 output_230_ap_vld R 0 "Control signal output_230_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x750 output_231 R 0x0 "Data signal of output_231" {{0 32 output_231 R 0 "Bit 31 to 0 Data signal of output_231"}}} {0x754 output_231_ctrl R 0x0 "Control signal of output_231" {{0 1 output_231_ap_vld R 0 "Control signal output_231_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x758 output_232 R 0x0 "Data signal of output_232" {{0 32 output_232 R 0 "Bit 31 to 0 Data signal of output_232"}}} {0x75c output_232_ctrl R 0x0 "Control signal of output_232" {{0 1 output_232_ap_vld R 0 "Control signal output_232_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x760 output_233 R 0x0 "Data signal of output_233" {{0 32 output_233 R 0 "Bit 31 to 0 Data signal of output_233"}}} {0x764 output_233_ctrl R 0x0 "Control signal of output_233" {{0 1 output_233_ap_vld R 0 "Control signal output_233_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x768 output_234 R 0x0 "Data signal of output_234" {{0 32 output_234 R 0 "Bit 31 to 0 Data signal of output_234"}}} {0x76c output_234_ctrl R 0x0 "Control signal of output_234" {{0 1 output_234_ap_vld R 0 "Control signal output_234_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x770 output_235 R 0x0 "Data signal of output_235" {{0 32 output_235 R 0 "Bit 31 to 0 Data signal of output_235"}}} {0x774 output_235_ctrl R 0x0 "Control signal of output_235" {{0 1 output_235_ap_vld R 0 "Control signal output_235_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x778 output_236 R 0x0 "Data signal of output_236" {{0 32 output_236 R 0 "Bit 31 to 0 Data signal of output_236"}}} {0x77c output_236_ctrl R 0x0 "Control signal of output_236" {{0 1 output_236_ap_vld R 0 "Control signal output_236_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x780 output_237 R 0x0 "Data signal of output_237" {{0 32 output_237 R 0 "Bit 31 to 0 Data signal of output_237"}}} {0x784 output_237_ctrl R 0x0 "Control signal of output_237" {{0 1 output_237_ap_vld R 0 "Control signal output_237_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x788 output_238 R 0x0 "Data signal of output_238" {{0 32 output_238 R 0 "Bit 31 to 0 Data signal of output_238"}}} {0x78c output_238_ctrl R 0x0 "Control signal of output_238" {{0 1 output_238_ap_vld R 0 "Control signal output_238_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x790 output_239 R 0x0 "Data signal of output_239" {{0 32 output_239 R 0 "Bit 31 to 0 Data signal of output_239"}}} {0x794 output_239_ctrl R 0x0 "Control signal of output_239" {{0 1 output_239_ap_vld R 0 "Control signal output_239_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x798 output_240 R 0x0 "Data signal of output_240" {{0 32 output_240 R 0 "Bit 31 to 0 Data signal of output_240"}}} {0x79c output_240_ctrl R 0x0 "Control signal of output_240" {{0 1 output_240_ap_vld R 0 "Control signal output_240_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7a0 output_241 R 0x0 "Data signal of output_241" {{0 32 output_241 R 0 "Bit 31 to 0 Data signal of output_241"}}} {0x7a4 output_241_ctrl R 0x0 "Control signal of output_241" {{0 1 output_241_ap_vld R 0 "Control signal output_241_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7a8 output_242 R 0x0 "Data signal of output_242" {{0 32 output_242 R 0 "Bit 31 to 0 Data signal of output_242"}}} {0x7ac output_242_ctrl R 0x0 "Control signal of output_242" {{0 1 output_242_ap_vld R 0 "Control signal output_242_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7b0 output_243 R 0x0 "Data signal of output_243" {{0 32 output_243 R 0 "Bit 31 to 0 Data signal of output_243"}}} {0x7b4 output_243_ctrl R 0x0 "Control signal of output_243" {{0 1 output_243_ap_vld R 0 "Control signal output_243_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7b8 output_244 R 0x0 "Data signal of output_244" {{0 32 output_244 R 0 "Bit 31 to 0 Data signal of output_244"}}} {0x7bc output_244_ctrl R 0x0 "Control signal of output_244" {{0 1 output_244_ap_vld R 0 "Control signal output_244_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7c0 output_245 R 0x0 "Data signal of output_245" {{0 32 output_245 R 0 "Bit 31 to 0 Data signal of output_245"}}} {0x7c4 output_245_ctrl R 0x0 "Control signal of output_245" {{0 1 output_245_ap_vld R 0 "Control signal output_245_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7c8 output_246 R 0x0 "Data signal of output_246" {{0 32 output_246 R 0 "Bit 31 to 0 Data signal of output_246"}}} {0x7cc output_246_ctrl R 0x0 "Control signal of output_246" {{0 1 output_246_ap_vld R 0 "Control signal output_246_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7d0 output_247 R 0x0 "Data signal of output_247" {{0 32 output_247 R 0 "Bit 31 to 0 Data signal of output_247"}}} {0x7d4 output_247_ctrl R 0x0 "Control signal of output_247" {{0 1 output_247_ap_vld R 0 "Control signal output_247_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7d8 output_248 R 0x0 "Data signal of output_248" {{0 32 output_248 R 0 "Bit 31 to 0 Data signal of output_248"}}} {0x7dc output_248_ctrl R 0x0 "Control signal of output_248" {{0 1 output_248_ap_vld R 0 "Control signal output_248_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7e0 output_249 R 0x0 "Data signal of output_249" {{0 32 output_249 R 0 "Bit 31 to 0 Data signal of output_249"}}} {0x7e4 output_249_ctrl R 0x0 "Control signal of output_249" {{0 1 output_249_ap_vld R 0 "Control signal output_249_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7e8 output_250 R 0x0 "Data signal of output_250" {{0 32 output_250 R 0 "Bit 31 to 0 Data signal of output_250"}}} {0x7ec output_250_ctrl R 0x0 "Control signal of output_250" {{0 1 output_250_ap_vld R 0 "Control signal output_250_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7f0 output_251 R 0x0 "Data signal of output_251" {{0 32 output_251 R 0 "Bit 31 to 0 Data signal of output_251"}}} {0x7f4 output_251_ctrl R 0x0 "Control signal of output_251" {{0 1 output_251_ap_vld R 0 "Control signal output_251_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7f8 output_252 R 0x0 "Data signal of output_252" {{0 32 output_252 R 0 "Bit 31 to 0 Data signal of output_252"}}} {0x7fc output_252_ctrl R 0x0 "Control signal of output_252" {{0 1 output_252_ap_vld R 0 "Control signal output_252_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x800 output_253 R 0x0 "Data signal of output_253" {{0 32 output_253 R 0 "Bit 31 to 0 Data signal of output_253"}}} {0x804 output_253_ctrl R 0x0 "Control signal of output_253" {{0 1 output_253_ap_vld R 0 "Control signal output_253_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x808 output_254 R 0x0 "Data signal of output_254" {{0 32 output_254 R 0 "Bit 31 to 0 Data signal of output_254"}}} {0x80c output_254_ctrl R 0x0 "Control signal of output_254" {{0 1 output_254_ap_vld R 0 "Control signal output_254_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x810 output_255 R 0x0 "Data signal of output_255" {{0 32 output_255 R 0 "Bit 31 to 0 Data signal of output_255"}}} {0x814 output_255_ctrl R 0x0 "Control signal of output_255" {{0 1 output_255_ap_vld R 0 "Control signal output_255_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}}}
        memories ""
        ctype {
            AWVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            AWREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            WVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            WREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BRESP {
                Type "integer unsigned"
                Width "2"
                Bits "2"
            }
            ARVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            ARREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RRESP {
                Type "integer unsigned"
                Width "2"
                Bits "2"
            }
            AWADDR {
                Type "integer unsigned"
                Width "12"
                Bits "12"
            }
            WDATA {
                Type "integer signed"
                Width "32"
                Bits "32"
            }
            WSTRB {
                Type "integer unsigned"
                Width "4"
                Bits "4"
            }
            ARADDR {
                Type "integer unsigned"
                Width "12"
                Bits "12"
            }
            RDATA {
                Type "integer signed"
                Width "32"
                Bits "32"
            }
        }
        data_width "32"
    }
    ap_clk {
        type "clock"
        ctype {
            CLK {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
        buses "s_axi_rm"
        reset "ap_rst_n"
    }
    ap_rst_n {
        type "reset"
        polarity "ACTIVE_LOW"
        ctype {
            RST {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
    }
    interrupt {
        type "interrupt"
        ctype {
            INTERRUPT {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
    }
}

set vivado_ver [version -short]
if {[regexp -nocase {2015\.1.*} $vivado_ver match]} {
    set user_param_type "std_logic_vector"
} else {
    set user_param_type "integer"
}

######################## Helper functions #################
variable user_parameter_order 1

proc add_port {core name dir width param args} {
    # {{{
    catch {ipx::remove_port $name $core}
    set current_port [ipx::add_port $name $core]
    set_property direction $dir $current_port
    if {$width == ""} {
        # std_logic
        set_property type_name "std_logic" $current_port
        set_property is_vector "false" $current_port
    } else {
        # std_logic_vector
        # width should be an integer
        set_property size_left [expr $width - 1] $current_port
        if {$param != ""} {
            if {[string range $param end-1 end] == "/8"} {
                # for strobe
                set param [string range $param 0 end-2]
                set_property size_left_dependency "((spirit:decode(id('MODELPARAM_VALUE.$param')) div 8) - 1)" $current_port
            } else {
                set_property size_left_dependency "(spirit:decode(id('MODELPARAM_VALUE.$param')) - 1)" $current_port
            }
            set_property size_left_resolve_type "dependent" $current_port
        } else {
            set_property size_left_resolve_type "immediate" $current_port
        }
        set_property size_left_format_type "long" $current_port
        set_property size_right 0 $current_port
        set_property size_right_resolve_type "immediate" $current_port
        set_property size_right_format_type "long" $current_port
        set_property type_name "std_logic_vector" $current_port
        set_property is_vector "true" $current_port
    }

    foreach {k v} $args {
        set_property $k $v $current_port
    }

    return $current_port
    # }}}
}

proc add_hdl_parameter {core name type value format resolve_type args} {
    # {{{
    set current_hdl_parameter [ipx::add_hdl_parameter $name $core]
    set_property data_type $type $current_hdl_parameter
    set_property value $value $current_hdl_parameter
    set_property value_format $format $current_hdl_parameter
    set_property value_resolve_type $resolve_type $current_hdl_parameter
    foreach {k v} $args {
        set_property $k $v $current_hdl_parameter
    }

    return $current_hdl_parameter
    # }}}
}

proc add_bus_interface {core name type mode {preferred_usage_value "ALL"} {has_dependant_on "0"} {offset_slave_name "s_axi_AXILiteS"} {master_addrwidth "32"}} {
    # {{{
    set properties ""
    switch -- $type {
        axi4 -
        axi4lite {
            dict set properties bus_type_vlnv "xilinx.com:interface:aximm:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:aximm_rtl:1.0"
            dict set properties endianness "little"
            dict set properties interface_mode $mode
            if {$mode == "master"} {
                set ::AddressSpace [ipx::add_address_space Data_$name $core]
                if {$master_addrwidth == "64"} {
                    set_property range 8G $::AddressSpace
                    set_property width 64 $::AddressSpace
                } else {
                    set_property range 4G $::AddressSpace
                    set_property width 32 $::AddressSpace
                }
                if {$has_dependant_on == "1"} {
                   set current_addrspace_param [ipx::add_address_space_parameter DEPENDENT_ON $::AddressSpace]
                   set_property value $offset_slave_name $current_addrspace_param
                }
                set current_addrspace_param [ipx::add_address_space_parameter PREFERRED_USAGE $::AddressSpace]
                set_property value $preferred_usage_value $current_addrspace_param
                dict set properties master_address_space_ref Data_$name
            }
            if {$mode == "slave"} {
                set current_memory_map [ipx::add_memory_map $name $core]
                set current_address_block [ipx::add_address_block Reg $current_memory_map]
                set_property width "32" $current_address_block
                set_property access "read-write" $current_address_block
                set_property usage "register" $current_address_block
                set_property base_address "0" $current_address_block
                set_property base_address_format "long" $current_address_block
                set_property base_address_resolve_type "immediate" $current_address_block
                set_property range "65536" $current_address_block
                set_property range_format "long" $current_address_block
                set_property range_resolve_type "generated" $current_address_block
                set current_parameter [ipx::add_address_block_parameter ${name}_base_addr $current_address_block]
                set_property name OFFSET_BASE_PARAM $current_parameter
                set_property value C_[string toupper $name]_BASEADDR $current_parameter
                set current_parameter [ipx::add_address_block_parameter ${name}_high_addr $current_address_block]
                set_property name OFFSET_HIGH_PARAM $current_parameter
                set_property value C_[string toupper $name]_HIGHADDR $current_parameter
                dict set properties slave_memory_map_ref $name
            }
        }
        axi4stream {
            dict set properties bus_type_vlnv "xilinx.com:interface:axis:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:axis_rtl:1.0"
            dict set properties endianness "little"
            dict set properties interface_mode $mode
        }
        bram {
            dict set properties bus_type_vlnv "xilinx.com:interface:bram:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:bram_rtl:1.0"
            dict set properties interface_mode $mode
        }
        fifo_read {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_fifo_read:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_fifo_read_rtl:1.0"
            dict set properties interface_mode $mode
        }
        fifo_write {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_fifo_write:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_fifo_write_rtl:1.0"
            dict set properties interface_mode $mode
        }
        ap_ctrl {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_handshake:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_handshake_rtl:1.0"
            dict set properties interface_mode $mode
        }
        clock {
            dict set properties bus_type_vlnv "xilinx.com:signal:clock:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:clock_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        reset {
            dict set properties bus_type_vlnv "xilinx.com:signal:reset:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:reset_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        clockenable {
            dict set properties bus_type_vlnv "xilinx.com:signal:clockenable:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:clockenable_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        interrupt {
            dict set properties bus_type_vlnv "xilinx.com:signal:interrupt:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:interrupt_rtl:1.0"
            dict set properties interface_mode "master"
        }
        data {
            dict set properties bus_type_vlnv "xilinx.com:signal:data:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:data_rtl:1.0"
            dict set properties interface_mode $mode
        }
    }

    set current_bus_interface [ipx::add_bus_interface $name $core]
    dict for {k v} $properties {
        set_property $k $v $current_bus_interface
    }

    return $current_bus_interface
    # }}}
}

proc add_port_map {bus name logical physical} {
    # {{{
    set current_port_map [ipx::add_port_map $name $bus]
    set_property logical_name $logical $current_port_map
    set_property physical_name $physical $current_port_map

    return $current_port_map
    # }}}
}

proc add_bus_parameter {bus name value {resolve_type ""}} {
    # {{{
    if {$resolve_type == ""} {
        set resolve_type "immediate"
    }

    set current_bus_parameter [ipx::add_bus_parameter $name $bus]
    set_property value $value $current_bus_parameter
    set_property value_resolve_type $resolve_type $current_bus_parameter

    return $current_bus_parameter
    # }}}
}

proc add_user_parameter {core name display_name value format resolve_type args} {
    # {{{
    upvar user_parameter_order order
    incr order
    
    set current_user_parameter [ipx::add_user_parameter $name $core]
    set_property order $order $current_user_parameter
    set_property value $value $current_user_parameter
    set_property display_name $display_name $current_user_parameter
    set_property value_format $format $current_user_parameter
    set_property value_resolve_type $resolve_type $current_user_parameter
    foreach {k v} $args {
        set_property $k $v $current_user_parameter
    }

    return $current_user_parameter
    # }}}
}

proc create_datatype { ctype {bitoffset 0} {is_data 0}} {
    # {{{
    dict with ctype {}

    switch -- [lindex $Type 0] {
        integer {
            # integer
            if {[lindex $Type 1] == "signed"} {
                set signed true
            } else {
                set signed false
            }
            if {$is_data} {
               return [iptypes::datatype::new -type integer -bitwidth $Bits -bitoffset $bitoffset -signed $signed]
            } else {
               return [iptypes::datatype::new -type integer -bitwidth $Width -bitoffset $bitoffset -signed $signed]
            }
        }

        real {
            lassign $Type type sub_type signed frac_width
            if {$sub_type == "fixed"} {
                # real - fixed
                if {$signed == "signed"} {
                    set signed true
                } else {
                    set signed false
                }
                return [iptypes::datatype::new -type real -bitwidth $Width -bitoffset $bitoffset -fixed \
                    -signed $signed -fractwidth $frac_width]
            } else {
                # real -float
                set sigwidth [expr ($Width == 64)? 53 : 24]
                return [iptypes::datatype::new -type real -bitwidth $Width -bitoffset $bitoffset -float -sigwidth $sigwidth]
            }
        }

        complex {
            dict with Element {}

            if {$Bits % 8 != 0} {
                set ::__warn_sub_field__ 1
            }

            switch -- [lindex $Type 0] {
                integer {
                    # integer
                    if {[lindex $Type 1] == "signed"} {
                        set signed true
                    } else {
                        set signed false
                    }
                    return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -integer -signed $signed]
                }

                real {
                    lassign $Type type sub_type signed frac_width
                    if {$sub_type == "fixed"} {
                        # real - fixed
                        if {$signed == "signed"} {
                            set signed true
                        } else {
                            set signed false
                        }
                        return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -real -fixed \
                            -signed $signed -fractwidth $frac_width]
                    } else {
                        # real -float
                        set sigwidth [expr ($Width == 64)? 53 : 24]
                        return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -real -float -sigwidth $sigwidth]
                    }
                }
            }
        }

        struct {
            set type [iptypes::datatype::new -type struct -bitoffset $bitoffset]

            set i 0
            dict for {field_name field_type} $Fields {
                iptypes::struct::new_field type -name $field_name -datatype [create_datatype $field_type $i]
                incr i [dict get $field_type Bits]
            }

            return $type
        }

        array {
            return [iptypes::datatype::new -type array_type -bitoffset $bitoffset -size $Dimension \
                -stride [dict get $Element Bits] -datatype [create_datatype $Element]]
        }

        null    -
        default {
            # null
            return [iptypes::datatype::new -bitwidth $Width -bitoffset $bitoffset]
        }
    }
    # }}}
}

proc add_bus_datatype {bus ctype {is_data 0}} {
    # {{{
    if {$::SupportDataType && $ctype != ""} {
        set layered_metadata ""
        dict for {key value} $ctype {
            dict set layered_metadata $iptypes::vlnv $key [create_datatype $value 0 $is_data]
        }
        add_bus_parameter $bus LAYERED_METADATA $layered_metadata generated
    }
    # }}}
}

proc set_dependent { name value obj } {
    # {{{
   # are there any operators in the value field?
   # No, set as immediate
   # Yes, set as xpath expr
   if { [string first < $value ] != -1 || \
        [string first > $value ] != -1 || \
        [string first - $value ] != -1 || \
        [string first + $value ] != -1 || \
        [string first / $value ] != -1 || \
        [string first * $value ] != -1 } {
     set_property ${name}_dependency [ ipx::get_xpath_expression $value [ipx::current_core] ] $obj
     set_property ${name}_format long $obj
   } else {
     set_property ${name} $value $obj
     set_property ${name}_format long $obj
   }
    # }}}
}

proc set_access { access obj {is_field 0}} {
    # {{{
  # read-only, write-only, read-write, writeOnce, read-writeOnce 
  if        { $access eq "RW" } {
             set_property access "read-write" $obj
             if {$is_field} {
               set_property modified_write_value modify $obj 
             }
  } elseif { $access eq "R" } {
             set_property access "read-only" $obj
             if {$is_field} {
               set_property read_action modify $obj 
             }
  } elseif { $access eq "W" } {
             set_property access "write-only" $obj
  } elseif { $access eq "WO" } {
             set_property access "writeOnce" $obj
  } elseif { $access eq "RWO" } {
             set_property access "read-writeOnce" $obj
  } elseif { $access eq "RTOW" } {
             set_property access "read-only" $obj 
             if {$is_field} {
               set_property modified_write_value oneToToggle $obj 
               set_property read_action modify $obj 
             }
  } else {
    puts "Unmatched access type \"$access\""
  }

    # }}}
}

proc add_registers {registers memory_map_name} {
    # {{{
    set memory_maps [ ipx::get_memory_maps -quiet -of_objects [ ipx::current_core ] ] 
    if { $memory_maps eq "" } {
      set slaves_axi [ ipx::get_bus_interfaces -filter { ABSTRACTION_TYPE_NAME==aximm_rtl && interface_mode==slave } -of_objects [ ipx::current_core ] ]
      set slave_axi [ lindex $slaves_axi 0  ] 
      set memory_map [ ipx::add_memory_map [ get_property name $slave_axi ] [ipx::current_core ] ]
      # and point back to this memory map
      set_property  slave_memory_map_ref [get_property name $memory_map ] $slave_axi 
    } else {
      foreach memory_map_item $memory_maps {
        set memory_map_item_name [get_property name $memory_map_item]
        if {$memory_map_name eq $memory_map_item_name} {
          set memory_map $memory_map_item
        }
      }
    }
    
    set address_blocks [ ipx::get_address_blocks -quiet -of_objects $memory_map ]
    if { $address_blocks eq "" } {
      set address_block [ ipx::add_address_block [get_property name $memory_map ] $memory_map ]
      set_property base_address 0 $address_block 
      set_property range 4096 $address_block 
      set_property width 8 $address_block 
    } else {
      set address_block [ lindex $address_blocks 0 ]
    }
    
    
    foreach reg $registers {
      set offset [ lindex $reg 0 ]
      set name   [ lindex $reg 1 ]
      set access [ lindex $reg 2 ]
      set reset_val [ lindex $reg 3 ]
      set descr  [ lindex $reg 4 ]
      set fields  [ lindex $reg 5 ]
    
    #puts "Register line: [join $reg \"]"
    
      # compare offset and address range, if offset > default address rang(64k), we should expand the address range
      set address_range  [get_property range $address_block]
      set offset_value [::math::bignum::tostr  [ ::math::bignum::fromstr $offset ] ]
      while {$address_range <= $offset_value} {
          set address_range [expr $address_range * 2]
      }
    
      set_property range $address_range $address_block
      set ipx_reg [ ipx::add_register $name $address_block ]
      set_property address_offset $offset_value $ipx_reg 
      set_property size 32 $ipx_reg 
      set_property size_format long $ipx_reg 
      set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $reset_val ] ] $ipx_reg 
      set_property reset_value_format long $ipx_reg 
      set_property description $descr $ipx_reg 
      set_property display_name $name $ipx_reg 
    
      # read-only, write-only, read-write, writeOnce, read-writeOnce 
      set_access $access $ipx_reg
    
      foreach field $fields {
    #puts "  field line: [join $field \"]"
         set offset [ lindex $field 0 ]
         set width [ lindex $field 1 ]
         set name [ lindex $field 2 ]
         set access [ lindex $field 3 ]
         set reset_value [ lindex $field 4 ]
         set description [ lindex $field 5 ]
    
         set ipx_field [ ipx::add_field $name $ipx_reg ]
         set_property bit_offset $offset $ipx_field
    
         set_dependent bit_width $width $ipx_field
         set_access $access $ipx_field 1
    
         #  set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $offset ] ] $ipx_field 
         # set_property reset_value_format long $ipx_field 
         set_property description $description $ipx_field 
      }
    
    }

    # }}}
}

proc add_memories {memories memory_map_name} {
    # {{{
    set memory_maps [ ipx::get_memory_maps -quiet -of_objects [ ipx::current_core ] ] 
    if { $memory_maps eq "" } {
      set slaves_axi [ ipx::get_bus_interfaces -filter { ABSTRACTION_TYPE_NAME==aximm_rtl && interface_mode==slave } -of_objects [ ipx::current_core ] ]
      set slave_axi [ lindex $slaves_axi 0  ] 
      set memory_map [ ipx::add_memory_map [ get_property name $slave_axi ] [ipx::current_core ] ]
      # and point back to this memory map
      set_property  slave_memory_map_ref [get_property name $memory_map ] $slave_axi 
    } else {
      foreach memory_map_item $memory_maps {
        set memory_map_item_name [get_property name $memory_map_item]
        if {$memory_map_name eq $memory_map_item_name} {
          set memory_map $memory_map_item
        }
      }
    }

    set address_blocks [ ipx::get_address_blocks -quiet -of_objects $memory_map ]
    if { $address_blocks eq "" } {
      set address_block [ ipx::add_address_block [get_property name $memory_map ] $memory_map ]
      set_property base_address 0 $address_block 
      set_property range 4096 $address_block 
      set_property width 8 $address_block 
    } else {
      set address_block [ lindex $address_blocks 0 ]
    }
    
    
    dict for {array_name details} $memories {
      dict with details {}
      set offset $base_address
      set name   Memory_${array_name}
      set access RW
      set reset_val 0
      set descr  "Memory $array_name"
    
      # compare offset and address range, if offset > default address rang(64k), we should expand the address range
      set address_range  [get_property range $address_block]
      set offset_value [::math::bignum::tostr  [ ::math::bignum::fromstr $offset ] ]
      set address_range_tmp [expr $offset_value + $range ]
      while {$address_range < $address_range_tmp} {
          set address_range [expr $address_range * 2]
      }
    
      set_property range $address_range $address_block
      set ipx_reg [ ipx::add_register $name $address_block ]
      set_property address_offset $offset_value $ipx_reg 
      set_property size $range $ipx_reg 
      set_property size_format long $ipx_reg 
      set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $reset_val ] ] $ipx_reg 
      set_property reset_value_format long $ipx_reg 
      set_property description $descr $ipx_reg 
      set_property display_name $name $ipx_reg 
    
      # read-only, write-only, read-write, writeOnce, read-writeOnce 
      set_access $access $ipx_reg
    }
    # }}}
}

proc getFiles {path} {
    # {{{
    set files ""
    foreach item [glob -nocomplain [file join $path *]] {
        if {[file isdir $item]} {
            set files [concat $files [getFiles $item]]
        } else {
            lappend files $item
        }
    }

    return [lsort $files]
    # }}}
}
###########################################################

## Enter IP directory
cd [file dir [info script]]

## Generate sub cores
set IPs ""
set IPFiles ""
if {$SubcoreFiles != ""} {
    set ipdir "hdl/ip"
    file delete -force $ipdir
    file mkdir $ipdir

    set prj "tmp"
    create_project -force $prj
    set_property target_language vhdl [current_project]
    if {[regexp -nocase {2016\.1.*} $vivado_ver match]} {
        set_property coreContainer.alwaysCreateXCI 1 [current_project]
    }

    foreach ipfile $SubcoreFiles {
        set ipname [file root [file tail $ipfile]]
        set ipname [string range $ipname 0 end-3]

        source $ipfile
        if {[regexp -nocase {2016\.1.*} $vivado_ver match]} {
            extract_files -force -base_dir "./${prj}srcs/sources_1/ip" [get_files -all -of [get_ips $ipname]]
            file copy -force ./${prj}.srcs/sources_1/ip/$ipname.xci ./${prj}srcs/sources_1/ip/$ipname/.
            set prj_root "${prj}srcs"
        } else {
            set prj_root "${prj}.srcs"
        }

        set rtlfiles [glob -nocomplain ${prj_root}/sources_1/ip/$ipname/synth/*]
        foreach rtl $rtlfiles {
            file copy $rtl $ipdir
        }

        set rtlfiles [glob -nocomplain ${prj_root}/sources_1/ip/$ipname/*.mif]
        foreach rtl $rtlfiles {
            file copy $rtl $ipdir
        }

        set xcifile "${prj_root}/sources_1/ip/$ipname/$ipname.xci"
        if {![file isfile $xcifile]} {
            continue
        }

        set f [open $xcifile r]
        set s [read $f]
        close $f
        set pat {(?n)componentRef.*vendor="(.+)".*\s*.*library="(.+)".*\s*.*name="(.+)".*\s*.*version="(.+)".*\s*.*}
        if {[regexp $pat $s m vendor library name version]} {
            lappend IPs "$vendor:$library:$name:$version"
        }
    }

    close_project
    
    set IPs [lsort -u $IPs]
    set IPFiles [glob -nocomplain $ipdir/*]
}

## Basic info
set core [ipx::create_core $Vendor $Library $IPName $Version]
set_property display_name $DisplayName $core
set_property core_revision $Revision $core
set_property description $Description $core
set_property taxonomy $Taxonomy $core
set_property supported_families [list $Device Pre-Production] $core

## Add verilog files
if {[llength $VerilogFiles] > 0} {
    # synthesis
    set group [ipx::add_file_group xilinx_verilogsynthesis $core]
    foreach f [concat $IPFiles $ConstraintFiles $VerilogFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".dat" || [file ext $f] == ".mif"} {
            set_property type "mif" $current_file
        }
        if {[file ext $f] == ".xdc"} {
            if {[regexp -nocase {.*_ooc.xdc} $f]} {
                set_property used_in {out_of_context} $current_file
            } else {
                set_property used_in {synthesis implementation} $current_file
            }
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

    # behavioral simulation
    set group [ipx::add_file_group xilinx_verilogbehavioralsimulation $core]
    foreach f [concat $VerilogFiles $IPFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".dat" || [file ext $f] == ".mif"} {
            set_property type "mif" $current_file
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

}

## Add vhdl files
if {[llength $VhdlFiles] > 0} {
    # synthesis
    set group [ipx::add_file_group xilinx_vhdlsynthesis $core]
    foreach f [concat $IPFiles $ConstraintFiles $VhdlFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".xdc"} {
            if {[regexp -nocase {.*_ooc.xdc} $f]} {
                set_property used_in {out_of_context} $current_file
            } else {
                set_property used_in {synthesis implementation} $current_file
            }
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

    # behavioral simulation
    set group [ipx::add_file_group xilinx_vhdlbehavioralsimulation $core]
    foreach f [concat $VhdlFiles $IPFiles] {
        ipx::add_file $f $group
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

}

## Software Drivers Files
if {[llength $SWDriverFiles] > 0} {
    set current_file_group [ipx::add_file_group xilinx_softwaredriver $core]
    foreach f $SWDriverFiles {
        set current_file [ipx::add_file $f $current_file_group]
        if {[file ext $f] == ".mdd"} {
            set_property type {driver_mdd} $current_file
        } elseif {[file ext $f] == ".tcl"} {
            set_property type {driver_tcl} $current_file
        } else {
            set_property type {driver_src} $current_file
        }
    }
}

## Add document files
if {[llength $DocumentFiles] > 0} {
    set group [ipx::add_file_group xilinx_documentation $core]
    foreach f $DocumentFiles {
        ipx::add_file $f $group
    }
}

## Add misc files
if {[llength $MiscFiles] > 0} {
    set group [ipx::add_file_group xilinx_miscfiles $core]
    foreach f $MiscFiles {
        ipx::add_file $f $group
    }
}

## BD files
if {[llength $BDFiles] > 0} {
    set group [ipx::add_file_group xilinx_block_diagram $core]
    foreach f $BDFiles {
        ipx::add_file $f $group
    }
}

## Import ports
ipx::add_ports_from_hdl \
    -top_level_hdl_file hdl/vhdl/$Top.vhd \
    -top_module_name $Top \
    -quiet \
    $core

## Interfaces
dict for {interface_name interface_detail} $Interfaces {
    set ctype ""
    dict with interface_detail {}
    switch -nocase -- $type {
        axi4lite {
            # {{{
            ## direction
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## address width
            if {$mode == "master"} {
                set addr_bits 32
            } else {
               set addr_bits [dict get $port_width AWADDR]
            }

            ## rtl ports
            set rtl_ports [list \
                [list AWADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list AWVALID $dir0 "" ""] \
                [list AWREADY $dir1 "" ""] \
                [list WDATA   $dir0 32 "${param_prefix}_DATA_WIDTH"] \
                [list WSTRB   $dir0 4  "${param_prefix}_DATA_WIDTH/8"] \
                [list WVALID  $dir0 "" ""] \
                [list WREADY  $dir1 "" ""] \
                [list BRESP   $dir1 2  ""] \
                [list BVALID  $dir1 "" ""] \
                [list BREADY  $dir0 "" ""] \
                [list ARADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list ARVALID $dir0 "" ""] \
                [list ARREADY $dir1 "" ""] \
                [list RDATA   $dir1 32 "${param_prefix}_DATA_WIDTH"] \
                [list RRESP   $dir1 2  ""] \
                [list RVALID  $dir1 "" ""] \
                [list RREADY  $dir0 "" ""] \
            ]

            ## rtl parameters
            set rtl_parameters [list \
                [list ADDR_WIDTH "integer" $addr_bits "long" "generated"] \
                [list DATA_WIDTH "integer" 32 "long" "immediate"] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list ADDR_WIDTH $addr_bits] \
                [list DATA_WIDTH 32] \
                [list PROTOCOL AXI4LITE] \
                [list READ_WRITE_MODE READ_WRITE] \
            ]

            ## axi4
            set current_bus_interface [add_bus_interface $core $interface_name axi4lite $mode]

            ## ports
            foreach rtl_port $rtl_ports {
                lassign $rtl_port port_name port_dir port_width port_param
                add_port $core ${port_prefix}_$port_name $port_dir $port_width $port_param
            }

            ## rtl parameters
            foreach rtl_parameter $rtl_parameters {
                set pargs [lassign $rtl_parameter pname ptype pvalue pformat presolve_type]
                eval add_hdl_parameter \$core \${param_prefix}_\$pname \$ptype \$pvalue \$pformat \$presolve_type $pargs
            }

            ## bus parameters
            foreach bus_parameter $bus_parameters {
                lassign $bus_parameter pname pvalue
                add_bus_parameter $current_bus_interface $pname $pvalue
            }

            # port map
            foreach rtl_port $rtl_ports {
                set port_name [lindex $rtl_port 0]
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype

            # add registers
            if {[info exists registers] && $registers!=""} {
               add_registers $registers $interface_name
            }

            # add memories
            if {[info exists memories] && $memories!=""} {
               add_memories $memories $interface_name
            }
            # }}}
        }

        axi4stream {
            # {{{
            ## ports
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## bus parameters
            set bus_parameters ""

            set signal_set ""
            append signal_set [dict exists $ports TUSER]
            append signal_set [dict exists $ports TDEST]
            append signal_set [dict exists $ports TID]
            append signal_set [dict exists $ports TLAST]
            append signal_set [dict exists $ports TKEEP]
            append signal_set [dict exists $ports TSTRB]
            append signal_set [dict exists $ports TDATA]
            append signal_set $has_tready ;# TREADY
            lappend bus_parameters [list SIGNAL_SET $signal_set]

            if {[dict exists $ports TDATA]} {
                lappend bus_parameters [list TDATA_NUM_BYTES [expr [dict get $ports TDATA] / 8]]
            }

            if {[dict exists $ports TDEST]} {
                lappend bus_parameters [list TDEST_WIDTH [dict get $ports TDEST]]
            }

            if {[dict exists $ports TID]} {
                lappend bus_parameters [list TID_WIDTH [dict get $ports TID]]
            }

            if {[dict exists $ports TUSER]} {
                lappend bus_parameters [list TUSER_WIDTH [dict get $ports TUSER]]
            } else {
                lappend bus_parameters [list TUSER_WIDTH 0]
            }

            set layered_metadata ""
            if {$SupportDataType && [dict exists $ctype TDATA]} {
                set ::__warn_sub_field__ 0
                dict set layered_metadata $iptypes::vlnv TDATA [create_datatype [dict get $ctype TDATA]]
                if {$::__warn_sub_field__} {
                    puts "TDATA of AXI4-Stream interface '$interface_name' contains sub-fields not aligned to byte boundaries. The resulting layout may not be compatible with the connecting interface."
                }
                if {[dict exists $ctype TDATA Name]} {
                    dict set layered_metadata $iptypes::vlnv TDATA datatype name value [dict get $ctype TDATA Name]
                }
            }
            if {$SupportDataType && [dict exists $ctype TUSER]} {
                set ::__warn_sub_field__ 0
                dict set layered_metadata $iptypes::vlnv TUSER [create_datatype [dict get $ctype TUSER]]
                if {$::__warn_sub_field__} {
                    puts "TUSER of AXI4-Stream interface '$interface_name' contains sub-fields not aligned to byte boundaries. The resulting layout may not be compatible with the connecting interface."
                }
            }
            lappend bus_parameters [list LAYERED_METADATA $layered_metadata generated]

            # tvalid
            add_port $core ${port_prefix}_TVALID $dir0 "" ""

            # tready
            if {$has_tready} {
                add_port $core ${port_prefix}_TREADY $dir1 "" ""
            }

            # other ports
            set tieoff {TUSER 0 TDEST 0 TID 0 TLAST 0 TKEEP 1 TSTRB 1}
            dict for {port_name port_width} $ports {
                if {$dir0 == "in" && [dict exists $tieoff $port_name]} {
                    set driver_value [expr [dict get $tieoff $port_name] * (2 ** $port_width - 1)]
                    add_port $core ${port_prefix}_${port_name} $dir0 $port_width "" endianness little driver_value $driver_value
                } else {
                    add_port $core ${port_prefix}_${port_name} $dir0 $port_width "" endianness little
                }
            }

            ## create bus interface
            set current_bus_interface [add_bus_interface $core $interface_name axi4stream $mode]

            ## port map
            # tvalid
            add_port_map $current_bus_interface "TVALID" "TVALID" ${port_prefix}_TVALID

            # tready
            if {$has_tready} {
                add_port_map $current_bus_interface "TREADY" "TREADY" ${port_prefix}_TREADY
            }

            # other ports
            dict for {port_name port_width} $ports {
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }

            ## bus parameters
            foreach bus_parameter $bus_parameters {
                lassign $bus_parameter pname pvalue presolve_type
                add_bus_parameter $current_bus_interface $pname $pvalue $presolve_type
            }

            # }}}
        }

        native_axim {
            # {{{
            ## direction
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## address width
            if {$mode == "master"} {
                set addr_bits [dict get $port_width AWADDR]
                set wstrb_bits [dict get $port_width WSTRB]
            }

            ## rtl ports
            set rtl_ports [list \
                [list AWID    $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list AWADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list AWLEN   $dir0 8  ""] \
                [list AWSIZE  $dir0 3  ""] \
                [list AWBURST $dir0 2  ""] \
                [list AWLOCK  $dir0 2  ""] \
                [list AWREGION $dir0 4  ""] \
                [list AWCACHE $dir0 4  ""] \
                [list AWPROT  $dir0 3  ""] \
                [list AWQOS   $dir0 4  ""] \
                [list AWUSER  $dir0 1  "${param_prefix}_AWUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list AWVALID $dir0 "" ""] \
                [list AWREADY $dir1 "" ""] \
                [list WID     $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list WDATA   $dir0 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list WSTRB   $dir0 $wstrb_bits  "${param_prefix}_DATA_WIDTH/8"] \
                [list WLAST   $dir0 "" ""] \
                [list WUSER   $dir0 1  "${param_prefix}_WUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list WVALID  $dir0 "" ""] \
                [list WREADY  $dir1 "" ""] \
                [list BID     $dir1 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list BRESP   $dir1 2  ""] \
                [list BUSER   $dir1 1  "${param_prefix}_BUSER_WIDTH" \
                    driver_value {0} \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list BVALID  $dir1 "" ""] \
                [list BREADY  $dir0 "" ""] \
                [list ARID    $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list ARADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list ARLEN   $dir0 8  ""] \
                [list ARSIZE  $dir0 3  ""] \
                [list ARBURST $dir0 2  ""] \
                [list ARLOCK  $dir0 2  ""] \
                [list ARREGION $dir0 4  ""] \
                [list ARCACHE $dir0 4  ""] \
                [list ARPROT  $dir0 3  ""] \
                [list ARQOS   $dir0 4  ""] \
                [list ARUSER  $dir0 1  "${param_prefix}_ARUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list ARVALID $dir0 "" ""] \
                [list ARREADY $dir1 "" ""] \
                [list RID     $dir1 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list RDATA   $dir1 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list RRESP   $dir1 2  ""] \
                [list RLAST   $dir1 "" ""] \
                [list RUSER   $dir1 1  "${param_prefix}_RUSER_WIDTH" \
                    driver_value {0} \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list RVALID  $dir1 "" ""] \
                [list RREADY  $dir0 "" ""] \
            ]

            ## rtl parameters
            set rtl_parameters [list \
                [list ID_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list ADDR_WIDTH   "integer" $addr_bits "long" "immediate"] \
                [list DATA_WIDTH   "integer" $data_width "long" "generated"] \
                [list AWUSER_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list ARUSER_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list WUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list RUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list BUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list USER_VALUE      "$user_param_type" 0x00000000   "bitString" "generated" \
                    value_bit_string_length 32 \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list PROT_VALUE      "$user_param_type" \"000\"  "bitString" "generated" \
                    value_bit_string_length 3 \
                ] \
                [list CACHE_VALUE     "$user_param_type" \"0011\" "bitString" "generated" \
                    value_bit_string_length 4 \
                ] \
            ]

            ## user parameters
            set user_parameters [list \
                [list ENABLE_ID_PORTS "Enable ID ports" "false" "bool" "user"] \
                [list ID_WIDTH "ID width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                    value_validation_range_maximum 32 \
                    value_validation_range_minimum 1 \
                ] \
                [list DATA_WIDTH "Data width" $data_width "long" "user" \
                    value_validation_list {32:32 64:64 128:128 256:256 512:512 1024:1024} \
                ] \
                [list ENABLE_USER_PORTS "Enable USER ports" "false" "bool" "user"] \
                [list AWUSER_WIDTH "AWUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list WUSER_WIDTH "WUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list BUSER_WIDTH "BUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list ARUSER_WIDTH "ARUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list RUSER_WIDTH "RUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list USER_VALUE "USER value" 0x00000000 "bitString" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_bit_string_length 32 \
                ] \
                [list PROT_VALUE "PROT value" \"000\" "bitString" "user" \
                    value_bit_string_length 3 \
                ] \
                [list CACHE_VALUE "CACHE value" \"0011\" "bitString" "user" \
                    value_bit_string_length 4 \
                ] \
            ]

           if {$HasOffset==0} {
               lappend rtl_parameters [list TARGET_ADDR  "$user_param_type" 0x00000000 "bitString" "generated" value_bit_string_length 32]
               lappend user_parameters [list TARGET_ADDR "Base address of target slave" 0x00000000 "bitString" "user" value_bit_string_length 32]
           }

            set bus_parameters [list \
                [list ADDR_WIDTH $addr_bits] \
                [list MAX_BURST_LENGTH 256] \
                [list NUM_READ_OUTSTANDING $NUM_READ_OUTSTANDING] \
                [list NUM_WRITE_OUTSTANDING $NUM_WRITE_OUTSTANDING] \
                [list PROTOCOL AXI4] \
                [list READ_WRITE_MODE READ_WRITE] \
                [list SUPPORTS_NARROW_BURST 0] \
            ]

            ## axi4
            set current_bus_interface [add_bus_interface $core $interface_name axi4 $mode $preferred_usage_value $has_dependant_on $offset_slave_name $addr_bits]

            ## rtl parameters
            foreach rtl_parameter $rtl_parameters {
                set pargs [lassign $rtl_parameter pname ptype pvalue pformat presolve_type]
                eval add_hdl_parameter \$core \${param_prefix}_\$pname \$ptype \$pvalue \$pformat \$presolve_type $pargs
            }

            ## user parameters
            foreach user_parameter $user_parameters {
                set pargs [lassign $user_parameter pname pdisplay_name pvalue pformat presolve_type]
                eval add_user_parameter \$core \${param_prefix}_\$pname \$pdisplay_name \$pvalue \$pformat \$presolve_type $pargs config_groups \[list 1 \"\$interface_name (AXI4 Master Interface)\"\]
            }

            ## bus parameters
            foreach bus_parameter $bus_parameters {
                lassign $bus_parameter pname pvalue
                add_bus_parameter $current_bus_interface $pname $pvalue
            }

            ## ports
            foreach rtl_port $rtl_ports {
                set port_args [lassign $rtl_port port_name port_dir port_width port_param]
                eval add_port \$core \${port_prefix}_\$port_name \$port_dir \$port_width \$port_param $port_args
            }

            # port map
            foreach rtl_port $rtl_ports {
                set port_name [lindex $rtl_port 0]
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        bram {
            # {{{

            ## rtl ports
            set rtl_ports [list \
                [list Clk  CLK  out "" ""] \
                [list Rst  RST  out "" ""] \
                [list EN   EN   out "" ""] \
                [list WEN  WE   out [expr $mem_width / 8] ""] \
                [list Addr ADDR out 32 ""] \
                [list Dout DIN  out $mem_width ""] \
                [list Din  DOUT in  $mem_width ""] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list MEM_WIDTH $mem_width] \
                [list MEM_SIZE [expr $mem_width * $mem_depth / 8]] \
                [list MASTER_TYPE $master_type] \
            ]

            foreach mem_port $mem_ports {
                set suffix [string toupper $mem_port]
                ## interface
                set current_bus_interface [add_bus_interface $core ${interface_name}_PORT$suffix bram master]

                ## ports
                foreach rtl_port $rtl_ports {
                    lassign $rtl_port port_name port_map port_dir port_width port_param
                    add_port $core ${port_prefix}_${port_name}_$suffix $port_dir $port_width $port_param
                }

                ## bus parameters
                foreach bus_parameter $bus_parameters {
                    lassign $bus_parameter pname pvalue
                    add_bus_parameter $current_bus_interface $pname $pvalue
                }

                # port map
                foreach rtl_port $rtl_ports {
                    lassign $rtl_port port_name port_map
                    add_port_map $current_bus_interface $port_map $port_map ${port_prefix}_${port_name}_$suffix
                }
            }
            # }}}
        }

        native_bram {
            # {{{

            ## rtl ports
            set rtl_ports [list \
                [list Clk  CLK  out "" ""] \
                [list Rst  RST  out "" ""] \
                [list EN   EN   out "" ""] \
                [list WEN  WE   out $we_width ""] \
                [list Addr ADDR out $addr_width ""] \
                [list Din  DIN  out $mem_width ""] \
                [list Dout DOUT in  $mem_width ""] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list MEM_WIDTH $mem_width] \
                [list MEM_SIZE [expr $mem_width * $mem_depth / 8]] \
                [list MASTER_TYPE $master_type] \
            ]

            foreach mem_port $mem_ports {
                set suffix [string toupper $mem_port]
                ## interface
                set current_bus_interface [add_bus_interface $core ${interface_name}_PORT$suffix bram master]

                ## ports
                foreach rtl_port $rtl_ports {
                    lassign $rtl_port port_name port_map port_dir port_width port_param
                    add_port $core ${port_prefix}_${port_name}_$suffix $port_dir $port_width $port_param
                }

                ## bus parameters
                foreach bus_parameter $bus_parameters {
                    lassign $bus_parameter pname pvalue
                    add_bus_parameter $current_bus_interface $pname $pvalue
                }

                # port map
                foreach rtl_port $rtl_ports {
                    lassign $rtl_port port_name port_map
                    add_port_map $current_bus_interface $port_map $port_map ${port_prefix}_${port_name}_$suffix
                }

                # data type
                add_bus_datatype $current_bus_interface $ctype
            }
            # }}}
        }

        ap_fifo {
            # {{{
            if {$fifo_type == "read"} {
                set interface_type fifo_read
                set rtl_ports [list \
                    [list ${interface_name}_dout    RD_DATA in  $fifo_width] \
                    [list ${interface_name}_empty_n EMPTY_N in  ""] \
                    [list ${interface_name}_read    RD_EN   out ""] \
                ]
            } else {
                set interface_type fifo_write
                set rtl_ports [list \
                    [list ${interface_name}_din     WR_DATA out $fifo_width] \
                    [list ${interface_name}_full_n  FULL_N  in  ""] \
                    [list ${interface_name}_write   WR_EN   out ""] \
                ]
            }

            ## interface
            set current_bus_interface [add_bus_interface $core $interface_name $interface_type master]

            ## ports
            foreach rtl_port $rtl_ports {
                lassign $rtl_port port_name port_map port_dir port_width
                add_port $core $port_name $port_dir $port_width ""
            }

            # port map
            foreach rtl_port $rtl_ports {
                lassign $rtl_port port_name port_map
                add_port_map $current_bus_interface $port_map $port_map $port_name
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        ap_ctrl {
            # {{{
            set rtl_ports ""
            foreach port $ctrl_ports {
                switch -- $port {
                    ap_start {
                        lappend rtl_ports [list ap_start start in ""]
                    }
                    ap_ready {
                        lappend rtl_ports [list ap_ready ready out ""]
                    }
                    ap_done {
                        lappend rtl_ports [list ap_done done out ""]
                    }
                    ap_continue {
                        lappend rtl_ports [list ap_continue continue in ""]
                    }
                    ap_idle {
                        lappend rtl_ports [list ap_idle idle out ""]
                    }
                }
            }

            ## interface
            set current_bus_interface [add_bus_interface $core $interface_name ap_ctrl slave]

            ## ports
            foreach rtl_port $rtl_ports {
                lassign $rtl_port port_name port_map port_dir port_width
                add_port $core $port_name $port_dir $port_width ""
            }

            # port map
            foreach rtl_port $rtl_ports {
                lassign $rtl_port port_name port_map
                add_port_map $current_bus_interface $port_map $port_map $port_name
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        clock {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name clock slave]
            add_port_map $current_bus_interface CLK CLK $interface_name

            if {$buses != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_BUSIF [join $buses ":"]
            }

            # attach reset
             if {$reset != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_RESET [join $reset ":"]
            }

            # attach ce
            set result [dict filter $Interfaces script {name detail} {
                string equal [dict get $detail type] clockenable
            }]
            set port [lindex [dict keys $result] 0]
            if {$port != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_CLKEN $port
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        reset {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name reset slave]
            add_port_map $current_bus_interface RST RST $interface_name
            add_bus_parameter $current_bus_interface POLARITY $polarity

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        clockenable {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name clockenable slave]
            add_port_map $current_bus_interface CE CE $interface_name

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        interrupt {
            # {{{
            add_port $core $interface_name out "" ""
            set current_bus_interface [add_bus_interface $core $interface_name interrupt master]
            add_port_map $current_bus_interface Intr INTERRUPT $interface_name
            add_bus_parameter $current_bus_interface SENSITIVITY "LEVEL_HIGH"

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        data {
            # {{{
            if {$dir == "out"} {
                set mode "master"
            } else {
                set mode "slave"
            }
            add_port $core $interface_name $dir $width ""
            set current_bus_interface [add_bus_interface $core $interface_name $type $mode]
            add_port_map $current_bus_interface DATA DATA $interface_name

            # data type
            add_bus_datatype $current_bus_interface $ctype 1
            # }}}
        }
    }
}

## GUI
if {![regexp -nocase {2014\.3.*} $vivado_ver match]} {
    ipgui::add_group -name "group 0" -component [ipx::current_core] -parent [ipgui::get_pagespec -name "Page 0" -component [ipx::current_core] ] -display_name {m axi dev reg (AXI4 Master Interface)}
    set user_parameters_list [ipx::get_user_parameters -of_objects [ ipx::current_core ]]
    foreach {user_param} $user_parameters_list {
        set user_param_name [get_property name $user_param]
        if {[string compare -nocase $user_param_name "Component_Name"]} {
            ipgui::add_param -name $user_param_name -component [ipx::current_core] -parent [ipgui::get_groupspec -name "group 0" -component [ipx::current_core] ]
        }
    }
}
ipx::create_xgui_files -logo_file misc/logo.png $core

## System Info
set user_parameters_list {clk_period 10.000000 machine 64 combinational 1 latency 0 II x}
foreach {user_para value} $user_parameters_list {
    incr user_parameter_order
    set user_para_value [ipx::add_user_parameter $user_para $core]
    set_property value $value $user_para_value
    set_property value_resolve_type "immediate" $user_para_value
    set_property order $user_parameter_order $user_para_value
}

## save core
ipx::save_core $core

## Generate zip
set ZipFile [string map {. _} ${Vendor}_${Library}_${IPName}_${Version}].zip
ipx::archive_core [file join [pwd] $ZipFile] $core

## Generate XO file if kernel.xml file is dumped
set enable_xo_gen 0
set kernel_files {C:/xilinx/targeted_functions/dummy/targeted_function.c}
if {$enable_xo_gen} {
    set sdaccel_dir [file join [pwd] .. sdaccel]
    set db_dir [file join [pwd] .. .. .autopilot db]
    set kernel_xml [file join $sdaccel_dir kernel.xml]
    set kernel_xo [file join $sdaccel_dir kernel.xo]
    set design_xml [file join $db_dir ${IPName}.design.xml]
    if {[file isfile $kernel_xml]} {
        file delete -force $kernel_xo
        if {[file isfile $design_xml]} {
            package_xo -xo_path $kernel_xo -kernel_name $IPName -kernel_xml $kernel_xml -kernel_files $kernel_files -design_xml $design_xml -ip_directory [pwd]
        } else {
            package_xo -xo_path $kernel_xo -kernel_name $IPName -kernel_xml $kernel_xml -kernel_files $kernel_files -ip_directory [pwd]
        }
    }
}

# vim:ts=4 sw=4 et fdm=marker:
